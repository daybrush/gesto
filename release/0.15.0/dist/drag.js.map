{"version":3,"file":"drag.js","sources":["../src/utils.ts","../src/Dragger.ts","../src/drag.ts","../src/index.umd.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport function getPinchDragPosition(\n    clients: Client[],\n    prevClients: Client[],\n    startClients: Client[],\n    startPinchClients: Client[],\n) {\n    const nowCenter = getAverageClient(clients);\n    const prevCenter = getAverageClient(prevClients);\n    const startCenter = getAverageClient(startPinchClients);\n    const pinchClient = plueClient(startPinchClients[0], minusClient(nowCenter, startCenter));\n    const pinchPrevClient = plueClient(startPinchClients[0], minusClient(prevCenter, startCenter));\n\n    return getPosition(pinchClient, pinchPrevClient, startClients[0]);\n}\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getPositionEvent(e: any): Client[] {\n    if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function getPosition(client: Client, prevClient: Client, startClient: Client): Position {\n    const { clientX, clientY } = client;\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = prevClient;\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = startClient;\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX,\n        clientY,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getPositions(clients: Client[], prevClients: Client[], startClients: Client[]): Position[] {\n    return clients.map((client, i) => getPosition(client, prevClients[i], startClients[i]));\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[]) {\n    if (clients.length === 1) {\n        return clients[0];\n    }\n    return {\n        clientX: (clients[0].clientX + clients[1].clientX) / 2,\n        clientY: (clients[0].clientY + clients[1].clientY) / 2,\n    };\n}\nexport function plueClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function minusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { DragOptions, Client, Position, OnDrag } from \"./types\";\nimport {\n    getPositionEvent, getPosition, getClients, getPositions,\n    isMultiTouch, getPinchDragPosition, getAverageClient, getDist,\n} from \"./utils\";\nimport { addEvent, removeEvent } from \"@daybrush/utils\";\n\n/**\n * You can set up drag events in any browser.\n */\nclass Dragger {\n    public options: DragOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private prevClients: Client[] = [];\n    private startClients: Client[] = [];\n    private movement: number = 0;\n    private startPinchClients: Client[] = [];\n    private startDistance: number = 0;\n    private customDist = [0, 0];\n    private targets: Array<Element | Window> = [];\n    /**\n     *\n     */\n    constructor(targets: Array<Element | Window> | Element | Window, options: DragOptions = {}) {\n        const elements = [].concat(targets as any) as Array<Element | Window> ;\n        this.options = {\n            container: elements.length > 1 ? window : elements[0],\n            preventRightClick: true,\n            preventDefault: true,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n        this.customDist = [0, 0];\n        this.targets = elements;\n\n        if (this.isMouse) {\n            elements.forEach(el => {\n                addEvent(el, \"mousedown\", this.onDragStart);\n            });\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            const passive = {\n                passive: false,\n            };\n            elements.forEach(el => {\n                addEvent(el, \"touchstart\", this.onDragStart, passive);\n            });\n            addEvent(container!, \"touchmove\", this.onDrag, passive);\n            addEvent(container!, \"touchend\", this.onDragEnd, passive);\n            addEvent(container!, \"touchcancel\", this.onDragEnd, passive);\n        }\n    }\n    /**\n     *\n     */\n    public isDragging() {\n        return this.isDrag;\n    }\n    /**\n     *\n     */\n    public isFlag() {\n        return this.flag;\n    }\n    /**\n     *\n     */\n    public isPinchFlag() {\n        return this.pinchFlag;\n    }\n    /**\n     *\n     */\n    public isPinching() {\n        return this.isPinch;\n    }\n    /**\n     *\n     */\n    public scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag: boolean = true) {\n        if (!this.flag) {\n            return;\n        }\n        this.startClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        this.prevClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        isCallDrag && this.onDrag(e, true);\n    }\n    /**\n     * @method\n     */\n    public onDragStart = (e: any) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        const { container, pinchOutside, dragstart, preventRightClick } = this.options;\n        const isTouch = this.isTouch;\n\n        if (!this.flag && isTouch && pinchOutside) {\n            setTimeout(() => {\n                addEvent(container!, \"touchstart\", this.onDragStart);\n            });\n        }\n        if (this.flag && isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (isMultiTouch(e)) {\n            if (!this.flag && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n        if (this.flag) {\n            return;\n        }\n        const clients = this.startClients[0] ? this.startClients : getPositionEvent(e);\n\n        this.customDist = [0, 0];\n        this.flag = true;\n        this.isDrag = false;\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.datas = {};\n        this.movement = 0;\n\n        const position = getPosition(clients[0], this.prevClients[0], this.startClients[0]);\n\n        if (\n            (preventRightClick && e.which === 3)\n            || (dragstart && dragstart({\n                type: \"dragstart\",\n                datas: this.datas,\n                inputEvent: e,\n                ...position,\n            })) === false) {\n            this.startClients = [];\n            this.prevClients = [];\n            this.flag = false;\n        }\n        this.flag && e.preventDefault();\n    }\n    public onDrag = (e: any, isScroll?: boolean) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getPositionEvent(e);\n\n        if (this.pinchFlag) {\n            this.onPinch(e, clients);\n        }\n        const result = this.move([0, 0], e, clients);\n\n        if (!result || (!result.deltaX && !result.deltaY)) {\n            return;\n        }\n        const drag = this.options.drag;\n\n        drag && drag({\n            ...result,\n            isScroll: !!isScroll,\n            inputEvent: e,\n        });\n    }\n    public move([deltaX, deltaY]: number[], inputEvent: any, clients = this.prevClients): OnDrag | undefined {\n        const customDist = this.customDist;\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(clients, prevClients, startClients, this.startPinchClients)\n            : getPosition(clients[0], prevClients[0], startClients[0]);\n\n        customDist[0] += deltaX;\n        customDist[1] += deltaY;\n        position.deltaX += deltaX;\n        position.deltaY += deltaY;\n\n        const {\n            deltaX: positionDeltaX,\n            deltaY: positionDeltaY,\n        } = position;\n\n        position.distX += customDist[0];\n        position.distY += customDist[1];\n\n        this.movement += Math.sqrt(positionDeltaX * positionDeltaX + positionDeltaY * positionDeltaY);\n        this.prevClients = clients;\n        this.isDrag = true;\n\n        return {\n            type: \"drag\",\n            datas: this.datas,\n            ...position,\n            movement: this.movement,\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    public onDragEnd = (e: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const { dragend, pinchOutside, container } = this.options;\n        if (this.isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        this.flag = false;\n\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(prevClients, prevClients, startClients, this.startPinchClients)\n            : getPosition(prevClients[0], prevClients[0], startClients[0]);\n\n        this.startClients = [];\n        this.prevClients = [];\n        dragend && dragend({\n            type: \"dragend\",\n            datas: this.datas,\n            isDrag: this.isDrag,\n            inputEvent: e,\n            ...position,\n        });\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchstart, pinchThreshold } = this.options;\n\n        if (this.isDrag && this.movement > pinchThreshold!) {\n            return;\n        }\n        const pinchClients = getClients(e.changedTouches);\n\n        this.pinchFlag = true;\n        this.startClients.push(...pinchClients);\n        this.prevClients.push(...pinchClients);\n        this.startDistance = getDist(this.prevClients);\n        this.startPinchClients = [...this.prevClients];\n\n        if (!pinchstart) {\n            return;\n        }\n        const startClients = this.prevClients;\n        const startAverageClient = getAverageClient(startClients);\n        const centerPosition = getPosition(\n            startAverageClient,\n            startAverageClient,\n            startAverageClient,\n        );\n        pinchstart({\n            type: \"pinchstart\",\n            datas: this.datas,\n            touches: getPositions(startClients, startClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag || clients.length < 2) {\n            return;\n        }\n        this.isPinch = true;\n\n        const pinch = this.options.pinch;\n        if (!pinch) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(clients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        const distance = getDist(clients);\n        pinch({\n            type: \"pinch\",\n            datas: this.datas,\n            movement: this.movement,\n            touches: getPositions(clients, prevClients, startClients),\n            scale: distance / this.startDistance,\n            distance,\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.flag || !this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const pinchend = this.options.pinchend;\n\n        if (!pinchend) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(prevClients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        pinchend({\n            type: \"pinchend\",\n            datas: this.datas,\n            isPinch,\n            touches: getPositions(prevClients, prevClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n        this.isPinch = false;\n        this.pinchFlag = false;\n    }\n    /**\n     *\n     */\n    public unset() {\n        const targets = this.targets;\n        const container = this.options.container!;\n\n        if (this.isMouse) {\n            targets.forEach(target => {\n                removeEvent(target, \"mousedown\", this.onDragStart);\n            });\n            removeEvent(container, \"mousemove\", this.onDrag);\n            removeEvent(container, \"mouseup\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            targets.forEach(target => {\n                removeEvent(target, \"touchstart\", this.onDragStart);\n            });\n            removeEvent(container, \"touchstart\", this.onDragStart);\n            removeEvent(container, \"touchmove\", this.onDrag);\n            removeEvent(container, \"touchend\", this.onDragEnd);\n            removeEvent(container, \"touchcancel\", this.onDragEnd);\n        }\n    }\n}\n\nexport default Dragger;\n","import Dragger from \"./Dragger\";\nimport { DragOptions } from \"./types\";\n\nexport default function setDrag(el: Element, options: DragOptions) {\n    return new Dragger(el, options);\n}\n","\nimport Dragger, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Dragger as any)[name] = (modules as any)[name];\n}\n\nexport default Dragger;\n"],"names":["getPinchDragPosition","clients","prevClients","startClients","startPinchClients","nowCenter","getAverageClient","prevCenter","startCenter","pinchClient","plueClient","minusClient","pinchPrevClient","getPosition","isMultiTouch","e","touches","length","getPositionEvent","getClients","getClient","client","prevClient","startClient","clientX","clientY","prevX","prevY","startX","startY","deltaX","deltaY","distX","distY","getDist","Math","sqrt","pow","getPositions","map","i","min","push","client1","client2","targets","options","_this","flag","cancelable","_a","container","pinchOutside","dragstart","preventRightClick","isTouch","setTimeout","addEvent","onDragStart","removeEvent","changedTouches","pinchFlag","onPinchStart","customDist","isDrag","datas","movement","position","which","type","inputEvent","preventDefault","isScroll","onPinch","result","move","drag","dragend","onPinchEnd","elements","concat","window","pinchThreshold","events","indexOf","isMouse","forEach","el","onDrag","onDragEnd","passive_1","passive","isPinch","isCallDrag","positionDeltaX","positionDeltaY","_c","pinchstart","pinchClients","_b","startDistance","startAverageClient","centerPosition","pinch","distance","scale","pinchend","target","setDrag","Dragger","name","modules"],"mappings":"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"}