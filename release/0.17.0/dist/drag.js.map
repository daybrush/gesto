{"version":3,"file":"drag.js","sources":["../src/utils.ts","../src/Dragger.ts","../src/drag.ts","../src/index.umd.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport function getRad(pos1: number[], pos2: number[]) {\n    const distX = pos2[0] - pos1[0];\n    const distY = pos2[1] - pos1[1];\n    const rad = Math.atan2(distY, distX);\n\n    return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n\nexport function getRotatiion(touches: Client[]) {\n    return getRad([\n        touches[0].clientX,\n        touches[0].clientY,\n    ], [\n        touches[1].clientX,\n        touches[1].clientY,\n    ]) / Math.PI * 180;\n}\n\nexport function getPinchDragPosition(\n    clients: Client[],\n    prevClients: Client[],\n    startClients: Client[],\n    startPinchClients: Client[],\n) {\n    const nowCenter = getAverageClient(clients);\n    const prevCenter = getAverageClient(prevClients);\n    const startCenter = getAverageClient(startPinchClients);\n    const pinchClient = plueClient(startPinchClients[0], minusClient(nowCenter, startCenter));\n    const pinchPrevClient = plueClient(startPinchClients[0], minusClient(prevCenter, startCenter));\n\n    return getPosition(pinchClient, pinchPrevClient, startClients[0]);\n}\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getPositionEvent(e: any): Client[] {\n    if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function getPosition(client: Client, prevClient: Client, startClient: Client): Position {\n    const { clientX, clientY } = client;\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = prevClient;\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = startClient;\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX,\n        clientY,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getPositions(clients: Client[], prevClients: Client[], startClients: Client[]): Position[] {\n    return clients.map((client, i) => getPosition(client, prevClients[i], startClients[i]));\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[]) {\n    if (clients.length === 1) {\n        return clients[0];\n    }\n    return {\n        clientX: (clients[0].clientX + clients[1].clientX) / 2,\n        clientY: (clients[0].clientY + clients[1].clientY) / 2,\n    };\n}\nexport function plueClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function minusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { DragOptions, Client, Position, OnDrag } from \"./types\";\nimport {\n    getPositionEvent, getPosition, getClients, getPositions,\n    isMultiTouch, getPinchDragPosition, getAverageClient, getDist, getRotatiion,\n} from \"./utils\";\nimport { addEvent, removeEvent, now } from \"@daybrush/utils\";\n\n/**\n * You can set up drag events in any browser.\n */\nclass Dragger {\n    public options: DragOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private prevClients: Client[] = [];\n    private startClients: Client[] = [];\n    private movement: number = 0;\n    private startPinchClients: Client[] = [];\n    private startDistance: number = 0;\n    private customDist = [0, 0];\n    private targets: Array<Element | Window> = [];\n    private prevTime: number = 0;\n    private isDouble: boolean = false;\n    private startRotate = 0;\n    /**\n     *\n     */\n    constructor(targets: Array<Element | Window> | Element | Window, options: DragOptions = {}) {\n        const elements = [].concat(targets as any) as Array<Element | Window> ;\n        this.options = {\n            container: elements.length > 1 ? window : elements[0],\n            preventRightClick: true,\n            preventDefault: true,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n        this.customDist = [0, 0];\n        this.targets = elements;\n\n        if (this.isMouse) {\n            elements.forEach(el => {\n                addEvent(el, \"mousedown\", this.onDragStart);\n            });\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n            addEvent(container!, \"contextmenu\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            const passive = {\n                passive: false,\n            };\n            elements.forEach(el => {\n                addEvent(el, \"touchstart\", this.onDragStart, passive);\n            });\n            addEvent(container!, \"touchmove\", this.onDrag, passive);\n            addEvent(container!, \"touchend\", this.onDragEnd, passive);\n            addEvent(container!, \"touchcancel\", this.onDragEnd, passive);\n        }\n    }\n    /**\n     *\n     */\n    public isDragging() {\n        return this.isDrag;\n    }\n    /**\n     *\n     */\n    public isFlag() {\n        return this.flag;\n    }\n    /**\n     *\n     */\n    public isPinchFlag() {\n        return this.pinchFlag;\n    }\n    /**\n     *\n     */\n    public isPinching() {\n        return this.isPinch;\n    }\n    /**\n     *\n     */\n    public scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag: boolean = true) {\n        if (!this.flag) {\n            return;\n        }\n        this.startClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        this.prevClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        isCallDrag && this.onDrag(e, true);\n    }\n    /**\n     * @method\n     */\n    public onDragStart = (e: any) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        const { container, pinchOutside, dragstart, preventRightClick, preventDefault } = this.options;\n        const isTouch = this.isTouch;\n\n        if (!this.flag && isTouch && pinchOutside) {\n            setTimeout(() => {\n                addEvent(container!, \"touchstart\", this.onDragStart);\n            });\n        }\n        if (this.flag && isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (isMultiTouch(e)) {\n            if (!this.flag && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n        if (this.flag) {\n            return;\n        }\n        const clients = this.startClients[0] ? this.startClients : getPositionEvent(e);\n\n        this.customDist = [0, 0];\n        this.flag = true;\n        this.isDrag = false;\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.datas = {};\n        this.movement = 0;\n\n        const position = getPosition(clients[0], this.prevClients[0], this.startClients[0]);\n\n        if (\n            (preventRightClick && (e.which === 3 || e.button === 2))\n            || (dragstart && dragstart({\n                type: \"dragstart\",\n                datas: this.datas,\n                inputEvent: e,\n                ...position,\n            })) === false) {\n            this.startClients = [];\n            this.prevClients = [];\n            this.flag = false;\n        }\n        this.isDouble = now() - this.prevTime < 200;\n        this.flag && preventDefault && e.preventDefault();\n    }\n    public onDrag = (e: any, isScroll?: boolean) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getPositionEvent(e);\n\n        if (this.pinchFlag) {\n            this.onPinch(e, clients);\n        }\n        const result = this.move([0, 0], e, clients);\n\n        if (!result || (!result.deltaX && !result.deltaY)) {\n            return;\n        }\n        const drag = this.options.drag;\n\n        drag && drag({\n            ...result,\n            isScroll: !!isScroll,\n            inputEvent: e,\n        });\n    }\n    public move([deltaX, deltaY]: number[], inputEvent: any, clients = this.prevClients): OnDrag | undefined {\n        const customDist = this.customDist;\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(clients, prevClients, startClients, this.startPinchClients)\n            : getPosition(clients[0], prevClients[0], startClients[0]);\n\n        customDist[0] += deltaX;\n        customDist[1] += deltaY;\n        position.deltaX += deltaX;\n        position.deltaY += deltaY;\n\n        const {\n            deltaX: positionDeltaX,\n            deltaY: positionDeltaY,\n        } = position;\n\n        position.distX += customDist[0];\n        position.distY += customDist[1];\n\n        this.movement += Math.sqrt(positionDeltaX * positionDeltaX + positionDeltaY * positionDeltaY);\n        this.prevClients = clients;\n        this.isDrag = true;\n\n        return {\n            type: \"drag\",\n            datas: this.datas,\n            ...position,\n            movement: this.movement,\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    public onDragEnd = (e: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const { dragend, pinchOutside, container } = this.options;\n        if (this.isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        this.flag = false;\n\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(prevClients, prevClients, startClients, this.startPinchClients)\n            : getPosition(prevClients[0], prevClients[0], startClients[0]);\n\n        const currentTime = now();\n        const isDouble = !this.isDrag && this.isDouble;\n\n        this.prevTime = this.isDrag || isDouble ? 0 : currentTime;\n        this.startClients = [];\n        this.prevClients = [];\n\n        dragend && dragend({\n            type: \"dragend\",\n            datas: this.datas,\n            isDouble,\n            isDrag: this.isDrag,\n            inputEvent: e,\n            ...position,\n        });\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchstart, pinchThreshold } = this.options;\n\n        if (this.isDrag && this.movement > pinchThreshold!) {\n            return;\n        }\n        const pinchClients = getClients(e.changedTouches);\n\n        this.pinchFlag = true;\n        this.startClients.push(...pinchClients);\n        this.prevClients.push(...pinchClients);\n        this.startDistance = getDist(this.prevClients);\n        this.startPinchClients = [...this.prevClients];\n\n        if (!pinchstart) {\n            return;\n        }\n        const startClients = this.prevClients;\n        const startAverageClient = getAverageClient(startClients);\n        const centerPosition = getPosition(\n            startAverageClient,\n            startAverageClient,\n            startAverageClient,\n        );\n\n        this.startRotate = getRotatiion(startClients);\n        pinchstart({\n            type: \"pinchstart\",\n            datas: this.datas,\n            angle: this.startRotate,\n            touches: getPositions(startClients, startClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag || clients.length < 2) {\n            return;\n        }\n        this.isPinch = true;\n\n        const pinch = this.options.pinch;\n        if (!pinch) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(clients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        const angle = getRotatiion(clients);\n        const distance = getDist(clients);\n        pinch({\n            type: \"pinch\",\n            datas: this.datas,\n            movement: this.movement,\n            angle,\n            rotation: angle - this.startRotate,\n            touches: getPositions(clients, prevClients, startClients),\n            scale: distance / this.startDistance,\n            distance,\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.flag || !this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const pinchend = this.options.pinchend;\n\n        if (!pinchend) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(prevClients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        pinchend({\n            type: \"pinchend\",\n            datas: this.datas,\n            isPinch,\n            touches: getPositions(prevClients, prevClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n        this.isPinch = false;\n        this.pinchFlag = false;\n    }\n    /**\n     *\n     */\n    public unset() {\n        const targets = this.targets;\n        const container = this.options.container!;\n\n        if (this.isMouse) {\n            targets.forEach(target => {\n                removeEvent(target, \"mousedown\", this.onDragStart);\n            });\n            removeEvent(container, \"mousemove\", this.onDrag);\n            removeEvent(container, \"mouseup\", this.onDragEnd);\n            removeEvent(container, \"contextmenu\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            targets.forEach(target => {\n                removeEvent(target, \"touchstart\", this.onDragStart);\n            });\n            removeEvent(container, \"touchstart\", this.onDragStart);\n            removeEvent(container, \"touchmove\", this.onDrag);\n            removeEvent(container, \"touchend\", this.onDragEnd);\n            removeEvent(container, \"touchcancel\", this.onDragEnd);\n        }\n    }\n}\n\nexport default Dragger;\n","import Dragger from \"./Dragger\";\nimport { DragOptions } from \"./types\";\n\nexport default function setDrag(el: Element, options: DragOptions) {\n    return new Dragger(el, options);\n}\n","\nimport Dragger, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Dragger as any)[name] = (modules as any)[name];\n}\n\nexport default Dragger;\n"],"names":["getRad","pos1","pos2","distX","distY","rad","Math","atan2","PI","getRotatiion","touches","clientX","clientY","getPinchDragPosition","clients","prevClients","startClients","startPinchClients","nowCenter","getAverageClient","prevCenter","startCenter","pinchClient","plueClient","minusClient","pinchPrevClient","getPosition","isMultiTouch","e","length","getPositionEvent","getClients","getClient","client","prevClient","startClient","prevX","prevY","startX","startY","deltaX","deltaY","getDist","sqrt","pow","getPositions","map","i","min","push","client1","client2","targets","options","_this","flag","cancelable","_a","container","pinchOutside","dragstart","preventRightClick","preventDefault","isTouch","setTimeout","addEvent","onDragStart","removeEvent","changedTouches","pinchFlag","onPinchStart","customDist","isDrag","datas","movement","position","which","button","type","inputEvent","isDouble","now","prevTime","isScroll","onPinch","result","move","drag","dragend","onPinchEnd","currentTime","elements","concat","window","pinchThreshold","events","indexOf","isMouse","forEach","el","onDrag","onDragEnd","passive_1","passive","isPinch","isCallDrag","positionDeltaX","positionDeltaY","_c","pinchstart","pinchClients","_b","startDistance","startAverageClient","centerPosition","startRotate","angle","pinch","distance","rotation","scale","pinchend","target","setDrag","Dragger","name","modules"],"mappings":"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"}