{"version":3,"file":"drag.esm.js","sources":["../src/utils.ts","../src/Dragger.ts","../src/drag.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport function getRad(pos1: number[], pos2: number[]) {\n    const distX = pos2[0] - pos1[0];\n    const distY = pos2[1] - pos1[1];\n    const rad = Math.atan2(distY, distX);\n\n    return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n\nexport function getRotatiion(touches: Client[]) {\n    return getRad([\n        touches[0].clientX,\n        touches[0].clientY,\n    ], [\n        touches[1].clientX,\n        touches[1].clientY,\n    ]) / Math.PI * 180;\n}\n\nexport function getPinchDragPosition(\n    clients: Client[],\n    prevClients: Client[],\n    startClients: Client[],\n    startPinchClients: Client[],\n) {\n    const nowCenter = getAverageClient(clients);\n    const prevCenter = getAverageClient(prevClients);\n    const startCenter = getAverageClient(startPinchClients);\n    const pinchClient = plueClient(startPinchClients[0], minusClient(nowCenter, startCenter));\n    const pinchPrevClient = plueClient(startPinchClients[0], minusClient(prevCenter, startCenter));\n\n    return getPosition(pinchClient, pinchPrevClient, startClients[0]);\n}\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getPositionEvent(e: any): Client[] {\n    if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function getPosition(client: Client, prevClient: Client, startClient: Client): Position {\n    const { clientX, clientY } = client;\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = prevClient;\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = startClient;\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX,\n        clientY,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getPositions(clients: Client[], prevClients: Client[], startClients: Client[]): Position[] {\n    return clients.map((client, i) => getPosition(client, prevClients[i], startClients[i]));\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[]) {\n    if (clients.length === 1) {\n        return clients[0];\n    }\n    return {\n        clientX: (clients[0].clientX + clients[1].clientX) / 2,\n        clientY: (clients[0].clientY + clients[1].clientY) / 2,\n    };\n}\nexport function plueClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function minusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { DragOptions, Client, Position, OnDrag } from \"./types\";\nimport {\n    getPositionEvent, getPosition, getClients, getPositions,\n    isMultiTouch, getPinchDragPosition, getAverageClient, getDist, getRotatiion,\n} from \"./utils\";\nimport { addEvent, removeEvent, now } from \"@daybrush/utils\";\n\nconst INPUT_TAGNAMES = [\"textarea\", \"input\"];\n/**\n * You can set up drag events in any browser.\n */\nclass Dragger {\n    public options: DragOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private prevClients: Client[] = [];\n    private startClients: Client[] = [];\n    private movement: number = 0;\n    private startPinchClients: Client[] = [];\n    private startDistance: number = 0;\n    private customDist = [0, 0];\n    private targets: Array<Element | Window> = [];\n    private prevTime: number = 0;\n    private isDouble: boolean = false;\n    private startRotate = 0;\n    /**\n     *\n     */\n    constructor(targets: Array<Element | Window> | Element | Window, options: DragOptions = {}) {\n        const elements = [].concat(targets as any) as Array<Element | Window>;\n        this.options = {\n            checkInput: false,\n            container: elements.length > 1 ? window : elements[0],\n            preventRightClick: true,\n            preventDefault: true,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n        this.customDist = [0, 0];\n        this.targets = elements;\n\n        if (this.isMouse) {\n            elements.forEach(el => {\n                addEvent(el, \"mousedown\", this.onDragStart);\n            });\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n            addEvent(container!, \"contextmenu\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            const passive = {\n                passive: false,\n            };\n            elements.forEach(el => {\n                addEvent(el, \"touchstart\", this.onDragStart, passive);\n            });\n            addEvent(container!, \"touchmove\", this.onDrag, passive);\n            addEvent(container!, \"touchend\", this.onDragEnd, passive);\n            addEvent(container!, \"touchcancel\", this.onDragEnd, passive);\n        }\n    }\n    /**\n     *\n     */\n    public isDragging() {\n        return this.isDrag;\n    }\n    /**\n     *\n     */\n    public isFlag() {\n        return this.flag;\n    }\n    /**\n     *\n     */\n    public isPinchFlag() {\n        return this.pinchFlag;\n    }\n    /**\n     *\n     */\n    public isPinching() {\n        return this.isPinch;\n    }\n    /**\n     *\n     */\n    public scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag: boolean = true) {\n        if (!this.flag) {\n            return;\n        }\n        this.startClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        this.prevClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        isCallDrag && this.onDrag(e, true);\n    }\n    /**\n     * @method\n     */\n    public onDragStart = (e: any, isTrusted = true) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        const { container, pinchOutside, dragstart, preventRightClick, preventDefault, checkInput } = this.options;\n        const isTouch = this.isTouch;\n\n        if (!this.flag) {\n            const activeElement = document.activeElement as HTMLElement;\n            const target = e.target as HTMLElement;\n            const tagName = target.tagName.toLowerCase();\n            const hasInput = INPUT_TAGNAMES.indexOf(tagName) > -1;\n            const hasContentEditable = target.isContentEditable;\n\n            if (hasInput || hasContentEditable) {\n                if (checkInput || activeElement === target) {\n                    // force false or already focused.\n                    return false;\n                }\n                if (\n                    activeElement\n                    && hasContentEditable\n                    && activeElement.isContentEditable\n                    && activeElement.contains(target)\n                ) {\n                    return false;\n                }\n            } else if ((preventDefault || e.type === \"touchstart\") && activeElement) {\n                const activeTagName = activeElement.tagName;\n                if (activeElement.isContentEditable || INPUT_TAGNAMES.indexOf(activeTagName) > -1) {\n                    activeElement.blur();\n                }\n            }\n        }\n        let timer = 0;\n\n        if (!this.flag && isTouch && pinchOutside) {\n            timer = setTimeout(() => {\n                addEvent(container!, \"touchstart\", this.onDragStart, { passive: false });\n            });\n        }\n        if (this.flag && isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (isMultiTouch(e)) {\n            clearTimeout(timer);\n            if (!this.flag && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n        if (this.flag) {\n            return;\n        }\n        const clients = this.startClients[0] ? this.startClients : getPositionEvent(e);\n\n        this.customDist = [0, 0];\n        this.flag = true;\n        this.isDrag = false;\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.datas = {};\n        this.movement = 0;\n\n        const position = getPosition(clients[0], this.prevClients[0], this.startClients[0]);\n\n        if (preventRightClick && (e.which === 3 || e.button === 2)) {\n            clearTimeout(timer);\n            this.initDrag();\n            return false;\n        }\n        const result = dragstart && dragstart({\n            type: \"dragstart\",\n            datas: this.datas,\n            inputEvent: e,\n            isTrusted,\n            ...position,\n        });\n        if (result === false) {\n            clearTimeout(timer);\n            this.initDrag();\n        }\n        this.isDouble = now() - this.prevTime < 200;\n        this.flag && preventDefault && e.preventDefault();\n    }\n    public onDrag = (e: any, isScroll?: boolean) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getPositionEvent(e);\n\n        if (this.pinchFlag) {\n            this.onPinch(e, clients);\n        }\n        const result = this.move([0, 0], e, clients);\n\n        if (!result || (!result.deltaX && !result.deltaY)) {\n            return;\n        }\n        const drag = this.options.drag;\n\n        drag && drag({\n            ...result,\n            isScroll: !!isScroll,\n            inputEvent: e,\n        });\n    }\n    public move([deltaX, deltaY]: number[], inputEvent: any, clients = this.prevClients): OnDrag | undefined {\n        const customDist = this.customDist;\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(clients, prevClients, startClients, this.startPinchClients)\n            : getPosition(clients[0], prevClients[0], startClients[0]);\n\n        customDist[0] += deltaX;\n        customDist[1] += deltaY;\n        position.deltaX += deltaX;\n        position.deltaY += deltaY;\n\n        const {\n            deltaX: positionDeltaX,\n            deltaY: positionDeltaY,\n        } = position;\n\n        position.distX += customDist[0];\n        position.distY += customDist[1];\n\n        this.movement += Math.sqrt(positionDeltaX * positionDeltaX + positionDeltaY * positionDeltaY);\n        this.prevClients = clients;\n        this.isDrag = true;\n\n        return {\n            type: \"drag\",\n            datas: this.datas,\n            ...position,\n            movement: this.movement,\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    public onDragEnd = (e: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const { dragend, pinchOutside, container } = this.options;\n        if (this.isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        this.flag = false;\n\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(prevClients, prevClients, startClients, this.startPinchClients)\n            : getPosition(prevClients[0], prevClients[0], startClients[0]);\n\n        const currentTime = now();\n        const isDouble = !this.isDrag && this.isDouble;\n\n        this.prevTime = this.isDrag || isDouble ? 0 : currentTime;\n        this.startClients = [];\n        this.prevClients = [];\n\n        dragend && dragend({\n            type: \"dragend\",\n            datas: this.datas,\n            isDouble,\n            isDrag: this.isDrag,\n            inputEvent: e,\n            ...position,\n        });\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchstart, pinchThreshold } = this.options;\n\n        if (this.isDrag && this.movement > pinchThreshold!) {\n            return;\n        }\n        const pinchClients = getClients(e.changedTouches);\n\n        this.pinchFlag = true;\n        this.startClients.push(...pinchClients);\n        this.prevClients.push(...pinchClients);\n        this.startDistance = getDist(this.prevClients);\n        this.startPinchClients = [...this.prevClients];\n\n        if (!pinchstart) {\n            return;\n        }\n        const startClients = this.prevClients;\n        const startAverageClient = getAverageClient(startClients);\n        const centerPosition = getPosition(\n            startAverageClient,\n            startAverageClient,\n            startAverageClient,\n        );\n\n        this.startRotate = getRotatiion(startClients);\n        pinchstart({\n            type: \"pinchstart\",\n            datas: this.datas,\n            angle: this.startRotate,\n            touches: getPositions(startClients, startClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag || clients.length < 2) {\n            return;\n        }\n        this.isPinch = true;\n\n        const pinch = this.options.pinch;\n        if (!pinch) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(clients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        const angle = getRotatiion(clients);\n        const distance = getDist(clients);\n        pinch({\n            type: \"pinch\",\n            datas: this.datas,\n            movement: this.movement,\n            angle,\n            rotation: angle - this.startRotate,\n            touches: getPositions(clients, prevClients, startClients),\n            scale: distance / this.startDistance,\n            distance,\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.flag || !this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const pinchend = this.options.pinchend;\n\n        if (!pinchend) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(prevClients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        pinchend({\n            type: \"pinchend\",\n            datas: this.datas,\n            isPinch,\n            touches: getPositions(prevClients, prevClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n        this.isPinch = false;\n        this.pinchFlag = false;\n    }\n    public triggerDragStart(e: any) {\n        this.onDragStart(e, false);\n    }\n    /**\n     *\n     */\n    public unset() {\n        const targets = this.targets;\n        const container = this.options.container!;\n\n        if (this.isMouse) {\n            targets.forEach(target => {\n                removeEvent(target, \"mousedown\", this.onDragStart);\n            });\n            removeEvent(container, \"mousemove\", this.onDrag);\n            removeEvent(container, \"mouseup\", this.onDragEnd);\n            removeEvent(container, \"contextmenu\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            targets.forEach(target => {\n                removeEvent(target, \"touchstart\", this.onDragStart);\n            });\n            removeEvent(container, \"touchstart\", this.onDragStart);\n            removeEvent(container, \"touchmove\", this.onDrag);\n            removeEvent(container, \"touchend\", this.onDragEnd);\n            removeEvent(container, \"touchcancel\", this.onDragEnd);\n        }\n    }\n    private initDrag() {\n        this.startClients = [];\n        this.prevClients = [];\n        this.flag = false;\n    }\n}\n\nexport default Dragger;\n","import Dragger from \"./Dragger\";\nimport { DragOptions } from \"./types\";\n\nexport default function setDrag(el: Element, options: DragOptions) {\n    return new Dragger(el, options);\n}\n"],"names":["getRad","pos1","pos2","distX","distY","rad","Math","atan2","PI","getRotatiion","touches","clientX","clientY","getPinchDragPosition","clients","prevClients","startClients","startPinchClients","nowCenter","getAverageClient","prevCenter","startCenter","pinchClient","plueClient","minusClient","pinchPrevClient","getPosition","isMultiTouch","e","length","getPositionEvent","getClients","getClient","client","prevClient","startClient","prevX","prevY","startX","startY","deltaX","deltaY","getDist","sqrt","pow","getPositions","map","i","min","push","client1","client2","INPUT_TAGNAMES","targets","options","isTrusted","_this","flag","cancelable","_a","container","pinchOutside","dragstart","preventRightClick","preventDefault","checkInput","isTouch","activeElement","document","target","tagName","toLowerCase","hasInput","indexOf","hasContentEditable","isContentEditable","contains","type","activeTagName","blur","timer","setTimeout","addEvent","onDragStart","passive","removeEvent","clearTimeout","changedTouches","pinchFlag","onPinchStart","customDist","isDrag","datas","movement","position","which","button","initDrag","result","inputEvent","isDouble","now","prevTime","isScroll","onPinch","move","drag","dragend","onPinchEnd","currentTime","elements","concat","window","pinchThreshold","events","isMouse","forEach","el","onDrag","onDragEnd","passive_1","isPinch","isCallDrag","positionDeltaX","positionDeltaY","_c","pinchstart","pinchClients","_b","startDistance","startAverageClient","centerPosition","startRotate","angle","pinch","distance","rotation","scale","pinchend","setDrag","Dragger"],"mappings":"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"}