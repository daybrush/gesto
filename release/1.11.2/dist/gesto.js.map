{"version":3,"file":"gesto.js","sources":["../src/utils.ts","../src/ClientStore.ts","../src/Gesto.ts","../src/index.umd.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat, isNumber } from \"@daybrush/utils\";\n\nexport function getRad(pos1: number[], pos2: number[]) {\n    const distX = pos2[0] - pos1[0];\n    const distY = pos2[1] - pos1[1];\n    const rad = Math.atan2(distY, distX);\n\n    return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n\nexport function getRotatiion(touches: Client[]) {\n    return getRad([\n        touches[0].clientX,\n        touches[0].clientY,\n    ], [\n        touches[1].clientX,\n        touches[1].clientY,\n    ]) / Math.PI * 180;\n}\n\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getEventClients(e: any): Client[] {\n    if (!e) {\n        return [];\n    } if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function isMouseEvent(e: any): e is MouseEvent {\n    return e && (e.type.indexOf(\"mouse\") > -1 || \"button\" in e || \"which\" in e);\n}\nexport function getPosition(clients: Client[], prevClients: Client[], startClients: Client[]): Position {\n    const length = startClients.length;\n    const {\n        clientX, clientY,\n        originalClientX, originalClientY,\n    } = getAverageClient(clients, length);\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = getAverageClient(prevClients, length);\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = getAverageClient(startClients, length);\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX: originalClientX!,\n        clientY: originalClientY!,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[], length = clients.length): Required<Client> {\n    const sumClient: Required<Client> = {\n        clientX: 0,\n        clientY: 0,\n        originalClientX: 0,\n        originalClientY: 0,\n    };\n    for (let i = 0; i < length; ++i) {\n        const client = clients[i];\n\n        sumClient.originalClientX += \"originalClientX\" in client ? client.originalClientX! : client.clientX;\n        sumClient.originalClientY += \"originalClientY\" in client ? client.originalClientY! : client.clientY;\n        sumClient.clientX += client.clientX;\n        sumClient.clientY += client.clientY;\n    }\n    if (!length) {\n        return sumClient;\n    }\n    return {\n        clientX: sumClient.clientX / length,\n        clientY: sumClient.clientY / length,\n        originalClientX: sumClient.originalClientX / length,\n        originalClientY: sumClient.originalClientY / length,\n    };\n}\nexport function plueClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function minusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { Client } from \"./types\";\nimport { getPosition, getDist, getRotatiion, getAverageClient } from \"./utils\";\n\nexport class ClientStore {\n    public prevClients: Client[] = [];\n    public startClients: Client[] = [];\n    public movement = 0;\n    public length  = 0;\n    constructor(clients: Client[]) {\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.length = clients.length;\n    }\n    public getAngle(clients: Client[] = this.prevClients) {\n        return getRotatiion(clients);\n    }\n    public getRotation(clients: Client[] = this.prevClients) {\n        return getRotatiion(clients) - getRotatiion(this.startClients);\n    }\n    public getPosition(clients: Client[] = this.prevClients, isAdd?: boolean) {\n        const position = getPosition(clients || this.prevClients, this.prevClients, this.startClients);\n\n        const { deltaX, deltaY } = position;\n\n        this.movement += Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        this.prevClients = clients;\n\n        return position;\n    }\n    public getPositions(clients: Client[] = this.prevClients) {\n        const prevClients = this.prevClients;\n\n        return this.startClients.map((startClient, i) => getPosition([clients[i]], [prevClients[i]], [startClient]));\n    }\n    public getMovement(clients?: Client[]) {\n        const movement = this.movement;\n\n        if (!clients) {\n            return movement;\n        }\n        const currentClient = getAverageClient(clients, this.length);\n        const prevClient = getAverageClient(this.prevClients, this.length);\n        const deltaX = currentClient.clientX - prevClient.clientX;\n        const deltaY = currentClient.clientY - prevClient.clientY;\n\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY) + movement;\n    }\n    public getDistance(clients = this.prevClients) {\n        return getDist(clients);\n    }\n    public getScale(clients = this.prevClients) {\n        return getDist(clients) / getDist(this.startClients);\n    }\n    public move(deltaX: number, deltaY: number) {\n        this.startClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n    }\n}\n","import { Client, OnDrag, GestoOptions, GestoEvents } from \"./types\";\nimport {\n    getEventClients, isMouseEvent, isMultiTouch,\n} from \"./utils\";\nimport EventEmitter, { TargetParam } from \"@scena/event-emitter\";\nimport { addEvent, removeEvent, now, IObject } from \"@daybrush/utils\";\nimport { ClientStore } from \"./ClientStore\";\n\nconst INPUT_TAGNAMES = [\"textarea\", \"input\"];\n/**\n * You can set up drag, pinch events in any browser.\n */\nclass Gesto extends EventEmitter<GestoEvents> {\n    public options: GestoOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas: IObject<any> = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private clientStores: ClientStore[] = [];\n    private targets: Array<Element | Window> = [];\n    private prevTime: number = 0;\n    private doubleFlag: boolean = false;\n    private _dragFlag = false;\n    private _isMouseEvent = false;\n    private _isSecondaryButton = false;\n\n    /**\n     *\n     */\n    constructor(targets: Array<Element | Window> | Element | Window, options: GestoOptions = {}) {\n        super();\n        const elements = [].concat(targets as any) as Array<Element | Window>;\n        this.options = {\n            checkInput: false,\n            container: elements.length > 1 ? window : elements[0],\n            preventRightClick: true,\n            preventWheelClick: true,\n            preventClickEventOnDragStart: false,\n            preventClickEventOnDrag: false,\n            preventDefault: true,\n            checkWindowBlur: false,\n            keepDragging: false,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events, checkWindowBlur } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n        this.targets = elements;\n\n        if (this.isMouse) {\n            elements.forEach(el => {\n                addEvent(el, \"mousedown\", this.onDragStart);\n            });\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n            addEvent(container!, \"contextmenu\", this._onContextMenu);\n        }\n        if (checkWindowBlur) {\n            addEvent(window, \"blur\", this.onBlur);\n        }\n        if (this.isTouch) {\n            const passive = {\n                passive: false,\n            };\n            elements.forEach(el => {\n                addEvent(el, \"touchstart\", this.onDragStart, passive);\n            });\n            addEvent(container!, \"touchmove\", this.onDrag, passive);\n            addEvent(container!, \"touchend\", this.onDragEnd, passive);\n            addEvent(container!, \"touchcancel\", this.onDragEnd, passive);\n        }\n    }\n    /**\n     * Stop Gesto's drag events.\n     */\n    public stop() {\n        this.isDrag = false;\n        this.flag = false;\n        this.clientStores = [];\n        this.datas = {};\n    }\n    /**\n     * The total moved distance\n     */\n    public getMovement(clients?: Client[]) {\n        return this.getCurrentStore().getMovement(clients) + this.clientStores.slice(1).reduce((prev, cur) => {\n            return prev + cur.movement;\n        }, 0);\n    }\n    /**\n     * Whether to drag\n     */\n    public isDragging(): boolean {\n        return this.isDrag;\n    }\n    /**\n     * Whether to start drag\n     */\n    public isFlag(): boolean {\n        return this.flag;\n    }\n    /**\n     * Whether to start pinch\n     */\n    public isPinchFlag() {\n        return this.pinchFlag;\n    }\n    /**\n     * Whether to start double click\n     */\n    public isDoubleFlag() {\n        return this.doubleFlag;\n    }\n    /**\n     * Whether to pinch\n     */\n    public isPinching() {\n        return this.isPinch;\n    }\n\n    /**\n     * If a scroll event occurs, it is corrected by the scroll distance.\n     */\n    public scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag: boolean = true) {\n        if (!this.flag) {\n            return;\n        }\n        this.clientStores[0].move(deltaX, deltaY);\n        isCallDrag && this.onDrag(e, true);\n    }\n    /**\n     * Create a virtual drag event.\n     */\n    public move([deltaX, deltaY]: number[], inputEvent: any): TargetParam<OnDrag> {\n        const store = this.getCurrentStore();\n        const nextClients = store.prevClients;\n\n        return this.moveClients(nextClients.map(({ clientX, clientY }) => {\n            return {\n                clientX: clientX + deltaX,\n                clientY: clientY + deltaY,\n                originalClientX: clientX,\n                originalClientY: clientY,\n            };\n        }), inputEvent, true);\n    }\n    /**\n     * The dragStart event is triggered by an external event.\n     */\n    public triggerDragStart(e: any) {\n        this.onDragStart(e, false);\n    }\n    /**\n     * Set the event data while dragging.\n     */\n    public setEventDatas(datas: IObject<any>) {\n        const currentDatas = this.datas;\n\n        for (const name in datas) {\n            currentDatas[name] = datas[name];\n        }\n        return this;\n    }\n    /**\n     * Get the current event state while dragging.\n     */\n    public getCurrentEvent(inputEvent?: any) {\n        return {\n            datas: this.datas,\n            ...this._getPosition(),\n            movement: this.getMovement(),\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    /**\n     * Get & Set the event data while dragging.\n     */\n    public getEventDatas() {\n        return this.datas;\n    }\n    /**\n     * Unset Gesto\n     */\n    public unset() {\n        const targets = this.targets;\n        const container = this.options.container!;\n\n        this.off();\n        removeEvent(window, \"blur\", this.onBlur);\n        if (this.isMouse) {\n            targets.forEach(target => {\n                removeEvent(target, \"mousedown\", this.onDragStart);\n            });\n            removeEvent(container, \"mousemove\", this.onDrag);\n            removeEvent(container, \"mouseup\", this.onDragEnd);\n            removeEvent(container, \"contextmenu\", this._onContextMenu);\n        }\n        if (this.isTouch) {\n            targets.forEach(target => {\n                removeEvent(target, \"touchstart\", this.onDragStart);\n            });\n            removeEvent(container, \"touchstart\", this.onDragStart);\n            removeEvent(container, \"touchmove\", this.onDrag);\n            removeEvent(container, \"touchend\", this.onDragEnd);\n            removeEvent(container, \"touchcancel\", this.onDragEnd);\n        }\n    }\n    public onDragStart = (e: any, isTrusted = true) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        const {\n            container,\n            pinchOutside,\n            preventWheelClick,\n            preventRightClick,\n            preventDefault,\n            checkInput,\n            preventClickEventOnDragStart,\n            preventClickEventOnDrag\n        } = this.options;\n        const isTouch = this.isTouch;\n        const isDragStart = !this.flag;\n\n        this._isSecondaryButton = e.which === 3 || e.button === 2;\n\n        if (\n            (preventWheelClick && (e.which === 2 || e.button === 1))\n            || (preventRightClick && (e.which === 3 || e.button === 2))\n        ) {\n            this.initDrag();\n            return false;\n        }\n\n        if (isDragStart) {\n            const activeElement = document.activeElement as HTMLElement;\n            const target = e.target as HTMLElement;\n            const tagName = target.tagName.toLowerCase();\n            const hasInput = INPUT_TAGNAMES.indexOf(tagName) > -1;\n            const hasContentEditable = target.isContentEditable;\n\n            if (hasInput || hasContentEditable) {\n                if (checkInput || activeElement === target) {\n                    // force false or already focused.\n                    return false;\n                }\n                // no focus\n                if (\n                    activeElement\n                    && hasContentEditable\n                    && activeElement.isContentEditable\n                    && activeElement.contains(target)\n                ) {\n                    return false;\n                }\n            } else if ((preventDefault || e.type === \"touchstart\") && activeElement) {\n                const activeTagName = activeElement.tagName;\n                if (activeElement.isContentEditable || INPUT_TAGNAMES.indexOf(activeTagName) > -1) {\n                    activeElement.blur();\n                }\n            }\n\n            if (preventClickEventOnDragStart || preventClickEventOnDrag) {\n                addEvent(window, \"click\", this._onClick, true);\n            }\n            this.clientStores = [new ClientStore(getEventClients(e))];\n            this.flag = true;\n            this.isDrag = false;\n            this._dragFlag = true;\n            this.datas = {};\n\n            this.doubleFlag = now() - this.prevTime < 200;\n            this._isMouseEvent = isMouseEvent(e);\n\n            const result = this.emit(\"dragStart\", {\n                datas: this.datas,\n                inputEvent: e,\n                isMouseEvent: this._isMouseEvent,\n                isSecondaryButton: this._isSecondaryButton,\n                isTrusted,\n                isDouble: this.doubleFlag,\n                ...this.getCurrentStore().getPosition(),\n                preventDefault() {\n                    e.preventDefault();\n                },\n                preventDrag: () => {\n                    this._dragFlag = false;\n                },\n            });\n            if (result === false) {\n                this.initDrag();\n            }\n            this.flag && preventDefault && e.preventDefault();\n        }\n        if (!this.flag) {\n            return false;\n        }\n        let timer = 0;\n\n        if (isDragStart && isTouch && pinchOutside) {\n            timer = setTimeout(() => {\n                addEvent(container!, \"touchstart\", this.onDragStart, { passive: false });\n            });\n        }\n        if (!isDragStart && isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.flag && isMultiTouch(e)) {\n            clearTimeout(timer);\n            if (isDragStart && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n\n    }\n    public onDrag = (e: any, isScroll?: boolean) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getEventClients(e);\n        const result = this.moveClients(clients, e, false);\n\n        if (this._dragFlag) {\n            if (this.pinchFlag || result.deltaX || result.deltaY) {\n                const dragResult = this.emit(\"drag\", {\n                    ...result,\n                    isScroll: !!isScroll,\n                    inputEvent: e,\n                });\n\n                if (dragResult === false) {\n                    this.stop();\n                    return;\n                }\n            }\n            if (this.pinchFlag) {\n                this.onPinch(e, clients);\n            }\n        }\n\n        this.getCurrentStore().getPosition(clients, true);\n    }\n    public onDragEnd = (e?: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const {\n            pinchOutside,\n            container,\n            preventClickEventOnDrag,\n            preventClickEventOnDragStart,\n        } = this.options;\n        const isDrag = this.isDrag;\n\n        if (preventClickEventOnDrag || preventClickEventOnDragStart) {\n            requestAnimationFrame(() => {\n                this._allowClickEvent();\n            });\n        }\n        if (preventClickEventOnDrag && !isDrag) {\n            this._allowClickEvent();\n        }\n\n        if (this.isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        const clients = e?.touches ? getEventClients(e) : [];\n        const clientsLength = clients.length;\n\n        if (clientsLength === 0 || !this.options.keepDragging) {\n            this.flag = false;\n        } else {\n            this._addStore(new ClientStore(clients));\n        }\n\n\n        const position = this._getPosition();\n        const currentTime = now();\n        const isDouble = !isDrag && this.doubleFlag;\n\n        this.prevTime = isDrag || isDouble ? 0 : currentTime;\n\n        if (!this.flag) {\n            this.emit(\"dragEnd\", {\n                datas: this.datas,\n                isDouble,\n                isDrag: isDrag,\n                isClick: !isDrag,\n                isMouseEvent: this._isMouseEvent,\n                isSecondaryButton: this._isSecondaryButton,\n                inputEvent: e,\n                ...position,\n            });\n\n            this.clientStores = [];\n        }\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchThreshold } = this.options;\n\n        if (this.isDrag && this.getMovement() > pinchThreshold!) {\n            return;\n        }\n        const store = new ClientStore(getEventClients(e));\n\n        this.pinchFlag = true;\n        this._addStore(store);\n\n        const result = this.emit(\"pinchStart\", {\n            datas: this.datas,\n            angle: store.getAngle(),\n            touches: this.getCurrentStore().getPositions(),\n            ...store.getPosition(),\n            inputEvent: e,\n        });\n\n        if (result === false) {\n            this.pinchFlag = false;\n        }\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag || clients.length < 2) {\n            return;\n        }\n\n        const store = this.getCurrentStore();\n        this.isPinch = true;\n\n        this.emit(\"pinch\", {\n            datas: this.datas,\n            movement: this.getMovement(clients),\n            angle: store.getAngle(clients),\n            rotation: store.getRotation(clients),\n            touches: store.getPositions(clients),\n            scale: store.getScale(clients),\n            distance: store.getDistance(clients),\n            ...store.getPosition(clients),\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const store = this.getCurrentStore();\n        this.emit(\"pinchEnd\", {\n            datas: this.datas,\n            isPinch,\n            touches: store.getPositions(),\n            ...store.getPosition(),\n            inputEvent: e,\n        });\n    }\n\n    private initDrag() {\n        this.clientStores = [];\n        this.pinchFlag = false;\n        this.doubleFlag = false;\n        this.prevTime = 0;\n        this.flag = false;\n        this._allowClickEvent();\n    }\n    private getCurrentStore() {\n        return this.clientStores[0];\n    }\n    private moveClients(clients: Client[], inputEvent: any, isAdd: boolean): TargetParam<OnDrag> {\n        const position = this._getPosition(clients, isAdd);\n\n        if (position.deltaX || position.deltaY) {\n            this.isDrag = true;\n        }\n\n        return {\n            datas: this.datas,\n            ...position,\n            movement: this.getMovement(clients),\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            isMouseEvent: this._isMouseEvent,\n            isSecondaryButton: this._isSecondaryButton,\n            inputEvent,\n        };\n    }\n    private onBlur = () => {\n        this.onDragEnd();\n    }\n    private _addStore(store: ClientStore) {\n        this.clientStores.splice(0, 0, store);\n    }\n    private _getPosition(clients?: Client[], isAdd?: boolean) {\n        const store = this.getCurrentStore();\n        const position = store.getPosition(clients, isAdd);\n\n        const { distX, distY } = this.clientStores.slice(1).reduce((prev, cur) => {\n            const storePosition = cur.getPosition();\n\n            prev.distX += storePosition.distX;\n            prev.distY += storePosition.distY;\n            return prev;\n        }, position);\n\n        return {\n            ...position,\n            distX,\n            distY,\n        };\n    }\n    private _allowClickEvent = () => {\n        removeEvent(window, \"click\", this._onClick, true);\n    };\n    private _onClick = (e: MouseEvent) => {\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    private _onContextMenu = (e: MouseEvent) => {\n        const options = this.options;\n        if (!options.preventRightClick) {\n            e.preventDefault();\n        } else {\n            this.onDragEnd(e);\n        }\n    }\n}\n\nexport default Gesto;\n","\nimport Dragger, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Dragger as any)[name] = (modules as any)[name];\n}\n\nexport default Dragger;\n"],"names":["getRad","pos1","pos2","distX","distY","rad","Math","atan2","PI","getRotatiion","touches","clientX","clientY","isMultiTouch","e","length","getEventClients","getClients","getClient","isMouseEvent","type","indexOf","getPosition","clients","prevClients","startClients","_a","getAverageClient","originalClientX","originalClientY","_b","prevX","prevY","_c","startX","startY","deltaX","deltaY","getDist","sqrt","pow","min","i","push","sumClient","client","isAdd","position","movement","map","startClient","currentClient","prevClient","forEach","INPUT_TAGNAMES","__extends","targets","options","_super","_this","isTrusted","flag","cancelable","container","pinchOutside","preventWheelClick","preventRightClick","preventDefault","checkInput","preventClickEventOnDragStart","preventClickEventOnDrag","isTouch","isDragStart","_isSecondaryButton","which","button","initDrag","activeElement","document","target","tagName","toLowerCase","hasInput","hasContentEditable","isContentEditable","contains","activeTagName","blur","addEvent","window","_onClick","clientStores","ClientStore","isDrag","_dragFlag","datas","doubleFlag","now","prevTime","_isMouseEvent","result","emit","inputEvent","isSecondaryButton","isDouble","getCurrentStore","preventDrag","timer","setTimeout","onDragStart","passive","removeEvent","clearTimeout","changedTouches","pinchFlag","onPinchStart","isScroll","moveClients","dragResult","stop","onPinch","requestAnimationFrame","_allowClickEvent","onPinchEnd","clientsLength","keepDragging","_addStore","_getPosition","currentTime","isClick","onDragEnd","stopPropagation","elements","concat","checkWindowBlur","pinchThreshold","events","isMouse","el","onDrag","_onContextMenu","onBlur","passive_1","getMovement","slice","reduce","prev","cur","isPinch","isCallDrag","move","store","nextClients","currentDatas","name","off","angle","getAngle","getPositions","rotation","getRotation","scale","getScale","distance","getDistance","splice","storePosition","EventEmitter","modules","Dragger"],"mappings":"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"}