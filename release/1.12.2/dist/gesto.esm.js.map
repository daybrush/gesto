{"version":3,"file":"gesto.esm.js","sources":["../src/utils.ts","../src/ClientStore.ts","../src/Gesto.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat, isNumber } from \"@daybrush/utils\";\n\nexport function getRad(pos1: number[], pos2: number[]) {\n    const distX = pos2[0] - pos1[0];\n    const distY = pos2[1] - pos1[1];\n    const rad = Math.atan2(distY, distX);\n\n    return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n\nexport function getRotatiion(touches: Client[]) {\n    return getRad([\n        touches[0].clientX,\n        touches[0].clientY,\n    ], [\n        touches[1].clientX,\n        touches[1].clientY,\n    ]) / Math.PI * 180;\n}\n\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getEventClients(e: any): Client[] {\n    if (!e) {\n        return [];\n    } if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function isMouseEvent(e: any): e is MouseEvent {\n    return e && (e.type.indexOf(\"mouse\") > -1 || \"button\" in e);\n}\nexport function getPosition(clients: Client[], prevClients: Client[], startClients: Client[]): Position {\n    const length = startClients.length;\n    const {\n        clientX, clientY,\n        originalClientX, originalClientY,\n    } = getAverageClient(clients, length);\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = getAverageClient(prevClients, length);\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = getAverageClient(startClients, length);\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX: originalClientX!,\n        clientY: originalClientY!,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[], length = clients.length): Required<Client> {\n    const sumClient: Required<Client> = {\n        clientX: 0,\n        clientY: 0,\n        originalClientX: 0,\n        originalClientY: 0,\n    };\n    for (let i = 0; i < length; ++i) {\n        const client = clients[i];\n\n        sumClient.originalClientX += \"originalClientX\" in client ? client.originalClientX! : client.clientX;\n        sumClient.originalClientY += \"originalClientY\" in client ? client.originalClientY! : client.clientY;\n        sumClient.clientX += client.clientX;\n        sumClient.clientY += client.clientY;\n    }\n    if (!length) {\n        return sumClient;\n    }\n    return {\n        clientX: sumClient.clientX / length,\n        clientY: sumClient.clientY / length,\n        originalClientX: sumClient.originalClientX / length,\n        originalClientY: sumClient.originalClientY / length,\n    };\n}\nexport function plueClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function minusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { Client } from \"./types\";\nimport { getPosition, getDist, getRotatiion, getAverageClient } from \"./utils\";\n\nexport class ClientStore {\n    public prevClients: Client[] = [];\n    public startClients: Client[] = [];\n    public movement = 0;\n    public length  = 0;\n    constructor(clients: Client[]) {\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.length = clients.length;\n    }\n    public getAngle(clients: Client[] = this.prevClients) {\n        return getRotatiion(clients);\n    }\n    public getRotation(clients: Client[] = this.prevClients) {\n        return getRotatiion(clients) - getRotatiion(this.startClients);\n    }\n    public getPosition(clients: Client[] = this.prevClients, isAdd?: boolean) {\n        const position = getPosition(clients || this.prevClients, this.prevClients, this.startClients);\n\n        const { deltaX, deltaY } = position;\n\n        this.movement += Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        this.prevClients = clients;\n\n        return position;\n    }\n    public getPositions(clients: Client[] = this.prevClients) {\n        const prevClients = this.prevClients;\n\n        return this.startClients.map((startClient, i) => getPosition([clients[i]], [prevClients[i]], [startClient]));\n    }\n    public getMovement(clients?: Client[]) {\n        const movement = this.movement;\n\n        if (!clients) {\n            return movement;\n        }\n        const currentClient = getAverageClient(clients, this.length);\n        const prevClient = getAverageClient(this.prevClients, this.length);\n        const deltaX = currentClient.clientX - prevClient.clientX;\n        const deltaY = currentClient.clientY - prevClient.clientY;\n\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY) + movement;\n    }\n    public getDistance(clients = this.prevClients) {\n        return getDist(clients);\n    }\n    public getScale(clients = this.prevClients) {\n        return getDist(clients) / getDist(this.startClients);\n    }\n    public move(deltaX: number, deltaY: number) {\n        this.startClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n    }\n}\n","import { Client, OnDrag, GestoOptions, GestoEvents } from \"./types\";\nimport {\n    getEventClients, isMouseEvent, isMultiTouch,\n} from \"./utils\";\nimport EventEmitter, { TargetParam } from \"@scena/event-emitter\";\nimport { addEvent, removeEvent, now, IObject } from \"@daybrush/utils\";\nimport { ClientStore } from \"./ClientStore\";\n\nconst INPUT_TAGNAMES = [\"textarea\", \"input\"];\n/**\n * You can set up drag, pinch events in any browser.\n */\nclass Gesto extends EventEmitter<GestoEvents> {\n    public options: GestoOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas: IObject<any> = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private clientStores: ClientStore[] = [];\n    private targets: Array<Element | Window> = [];\n    private prevTime: number = 0;\n    private doubleFlag: boolean = false;\n    private _dragFlag = false;\n    private _isMouseEvent = false;\n    private _isSecondaryButton = false;\n    private _preventMouseEvent = false;\n\n    /**\n     *\n     */\n    constructor(targets: Array<Element | Window> | Element | Window, options: GestoOptions = {}) {\n        super();\n        const elements = [].concat(targets as any) as Array<Element | Window>;\n        this.options = {\n            checkInput: false,\n            container: elements.length > 1 ? window : elements[0],\n            preventRightClick: true,\n            preventWheelClick: true,\n            preventClickEventOnDragStart: false,\n            preventClickEventOnDrag: false,\n            preventClickEventByCondition: null,\n            preventDefault: true,\n            checkWindowBlur: false,\n            keepDragging: false,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events, checkWindowBlur } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n        this.targets = elements;\n\n        if (this.isMouse) {\n            elements.forEach(el => {\n                addEvent(el, \"mousedown\", this.onDragStart);\n                addEvent(el, \"mousemove\", this._passCallback);\n            });\n            addEvent(container!, \"contextmenu\", this._onContextMenu);\n        }\n        if (checkWindowBlur) {\n            addEvent(window, \"blur\", this.onBlur);\n        }\n        if (this.isTouch) {\n            const passive = {\n                passive: false,\n            };\n            elements.forEach(el => {\n                addEvent(el, \"touchstart\", this.onDragStart, passive);\n                addEvent(el, \"touchmove\", this._passCallback, passive);\n            });\n        }\n    }\n    /**\n     * Stop Gesto's drag events.\n     */\n    public stop() {\n        this.isDrag = false;\n        this.datas = {};\n        this.clientStores = [];\n        this.pinchFlag = false;\n        this.doubleFlag = false;\n        this.prevTime = 0;\n        this.flag = false;\n\n        this._allowClickEvent();\n        this._dettachDragEvent();\n    }\n    /**\n     * The total moved distance\n     */\n    public getMovement(clients?: Client[]) {\n        return this.getCurrentStore().getMovement(clients) + this.clientStores.slice(1).reduce((prev, cur) => {\n            return prev + cur.movement;\n        }, 0);\n    }\n    /**\n     * Whether to drag\n     */\n    public isDragging(): boolean {\n        return this.isDrag;\n    }\n    /**\n     * Whether to start drag\n     */\n    public isFlag(): boolean {\n        return this.flag;\n    }\n    /**\n     * Whether to start pinch\n     */\n    public isPinchFlag() {\n        return this.pinchFlag;\n    }\n    /**\n     * Whether to start double click\n     */\n    public isDoubleFlag() {\n        return this.doubleFlag;\n    }\n    /**\n     * Whether to pinch\n     */\n    public isPinching() {\n        return this.isPinch;\n    }\n\n    /**\n     * If a scroll event occurs, it is corrected by the scroll distance.\n     */\n    public scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag: boolean = true) {\n        if (!this.flag) {\n            return;\n        }\n        this.clientStores[0].move(deltaX, deltaY);\n        isCallDrag && this.onDrag(e, true);\n    }\n    /**\n     * Create a virtual drag event.\n     */\n    public move([deltaX, deltaY]: number[], inputEvent: any): TargetParam<OnDrag> {\n        const store = this.getCurrentStore();\n        const nextClients = store.prevClients;\n\n        return this.moveClients(nextClients.map(({ clientX, clientY }) => {\n            return {\n                clientX: clientX + deltaX,\n                clientY: clientY + deltaY,\n                originalClientX: clientX,\n                originalClientY: clientY,\n            };\n        }), inputEvent, true);\n    }\n    /**\n     * The dragStart event is triggered by an external event.\n     */\n    public triggerDragStart(e: any) {\n        this.onDragStart(e, false);\n    }\n    /**\n     * Set the event data while dragging.\n     */\n    public setEventDatas(datas: IObject<any>) {\n        const currentDatas = this.datas;\n\n        for (const name in datas) {\n            currentDatas[name] = datas[name];\n        }\n        return this;\n    }\n    /**\n     * Get the current event state while dragging.\n     */\n    public getCurrentEvent(inputEvent?: any) {\n        return {\n            datas: this.datas,\n            ...this._getPosition(),\n            movement: this.getMovement(),\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    /**\n     * Get & Set the event data while dragging.\n     */\n    public getEventDatas() {\n        return this.datas;\n    }\n    /**\n     * Unset Gesto\n     */\n    public unset() {\n        const targets = this.targets;\n        const container = this.options.container!;\n\n        this.off();\n        removeEvent(window, \"blur\", this.onBlur);\n        if (this.isMouse) {\n            targets.forEach(target => {\n                removeEvent(target, \"mousedown\", this.onDragStart);\n            });\n            removeEvent(container, \"contextmenu\", this._onContextMenu);\n        }\n        if (this.isTouch) {\n            targets.forEach(target => {\n                removeEvent(target, \"touchstart\", this.onDragStart);\n            });\n            removeEvent(container, \"touchstart\", this.onDragStart);\n        }\n        this._dettachDragEvent();\n    }\n    public onDragStart = (e: any, isTrusted = true) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        const {\n            container,\n            pinchOutside,\n            preventWheelClick,\n            preventRightClick,\n            preventDefault,\n            checkInput,\n            preventClickEventOnDragStart,\n            preventClickEventOnDrag,\n            preventClickEventByCondition,\n        } = this.options;\n        const isTouch = this.isTouch;\n        const isDragStart = !this.flag;\n\n        this._isSecondaryButton = e.which === 3 || e.button === 2;\n\n        if (\n            (preventWheelClick && (e.which === 2 || e.button === 1))\n            || (preventRightClick && (e.which === 3 || e.button === 2))\n        ) {\n            this.stop();\n            return false;\n        }\n\n        if (isDragStart) {\n            const activeElement = document.activeElement as HTMLElement;\n            const target = e.target as HTMLElement;\n            const tagName = target.tagName.toLowerCase();\n            const hasInput = INPUT_TAGNAMES.indexOf(tagName) > -1;\n            const hasContentEditable = target.isContentEditable;\n\n            if (hasInput || hasContentEditable) {\n                if (checkInput || activeElement === target) {\n                    // force false or already focused.\n                    return false;\n                }\n                // no focus\n                if (\n                    activeElement\n                    && hasContentEditable\n                    && activeElement.isContentEditable\n                    && activeElement.contains(target)\n                ) {\n                    return false;\n                }\n            } else if ((preventDefault || e.type === \"touchstart\") && activeElement) {\n                const activeTagName = activeElement.tagName;\n                if (activeElement.isContentEditable || INPUT_TAGNAMES.indexOf(activeTagName) > -1) {\n                    activeElement.blur();\n                }\n            }\n\n            if (preventClickEventOnDragStart || preventClickEventOnDrag || preventClickEventByCondition) {\n                addEvent(window, \"click\", this._onClick, true);\n            }\n            this.clientStores = [new ClientStore(getEventClients(e))];\n            this.flag = true;\n            this.isDrag = false;\n            this._dragFlag = true;\n            this.datas = {};\n\n            this.doubleFlag = now() - this.prevTime < 200;\n            this._isMouseEvent = isMouseEvent(e);\n            if (!this._isMouseEvent && this._preventMouseEvent) {\n                this._preventMouseEvent = false;\n            }\n\n            const result = this._preventMouseEvent || this.emit(\"dragStart\", {\n                datas: this.datas,\n                inputEvent: e,\n                isMouseEvent: this._isMouseEvent,\n                isSecondaryButton: this._isSecondaryButton,\n                isTrusted,\n                isDouble: this.doubleFlag,\n                ...this.getCurrentStore().getPosition(),\n                preventDefault() {\n                    e.preventDefault();\n                },\n                preventDrag: () => {\n                    this._dragFlag = false;\n                },\n            });\n            if (result === false) {\n                this.stop();\n            }\n            if (this._isMouseEvent && this.flag && preventDefault) {\n                e.preventDefault();\n            }\n        }\n        if (!this.flag) {\n            return false;\n        }\n        let timer = 0;\n\n        if (isDragStart) {\n            this._attchDragEvent();\n\n            // wait pinch\n            if (isTouch && pinchOutside) {\n                timer = setTimeout(() => {\n                    addEvent(container!, \"touchstart\", this.onDragStart, {\n                        passive: false\n                    });\n                });\n            }\n        } else if (isTouch && pinchOutside) {\n            // pinch is occured\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.flag && isMultiTouch(e)) {\n            clearTimeout(timer);\n            if (isDragStart && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n\n    }\n    public onDrag = (e: any, isScroll?: boolean) => {\n        if (!this.flag) {\n            return;\n        }\n        const {\n            preventDefault,\n        } = this.options;\n        if (!this._isMouseEvent && preventDefault) {\n            e.preventDefault();\n        }\n        const clients = getEventClients(e);\n        const result = this.moveClients(clients, e, false);\n\n        if (this._dragFlag) {\n            if (this.pinchFlag || result.deltaX || result.deltaY) {\n                const dragResult = this._preventMouseEvent || this.emit(\"drag\", {\n                    ...result,\n                    isScroll: !!isScroll,\n                    inputEvent: e,\n                });\n\n                if (dragResult === false) {\n                    this.stop();\n                    return;\n                }\n            }\n            if (this.pinchFlag) {\n                this.onPinch(e, clients);\n            }\n        }\n\n        this.getCurrentStore().getPosition(clients, true);\n    }\n    public onDragEnd = (e?: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const {\n            pinchOutside,\n            container,\n            preventClickEventOnDrag,\n            preventClickEventOnDragStart,\n            preventClickEventByCondition,\n        } = this.options;\n        const isDrag = this.isDrag;\n\n        if (preventClickEventOnDrag || preventClickEventOnDragStart || preventClickEventByCondition) {\n            requestAnimationFrame(() => {\n                this._allowClickEvent();\n            });\n        }\n        if (!preventClickEventByCondition && !preventClickEventOnDragStart && preventClickEventOnDrag && !isDrag) {\n            this._allowClickEvent();\n        }\n\n        if (this.isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        const clients = e?.touches ? getEventClients(e) : [];\n        const clientsLength = clients.length;\n\n        if (clientsLength === 0 || !this.options.keepDragging) {\n            this.flag = false;\n        } else {\n            this._addStore(new ClientStore(clients));\n        }\n\n\n        const position = this._getPosition();\n        const currentTime = now();\n        const isDouble = !isDrag && this.doubleFlag;\n\n        this.prevTime = isDrag || isDouble ? 0 : currentTime;\n\n        if (!this.flag) {\n            this._dettachDragEvent();\n\n            this._preventMouseEvent || this.emit(\"dragEnd\", {\n                datas: this.datas,\n                isDouble,\n                isDrag: isDrag,\n                isClick: !isDrag,\n                isMouseEvent: this._isMouseEvent,\n                isSecondaryButton: this._isSecondaryButton,\n                inputEvent: e,\n                ...position,\n            });\n\n            this.clientStores = [];\n\n            if (!this._isMouseEvent) {\n                this._preventMouseEvent = true;\n                requestAnimationFrame(() => {\n                    requestAnimationFrame(() => {\n                        this._preventMouseEvent = false;\n                    });\n                });\n            }\n        }\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchThreshold } = this.options;\n\n        if (this.isDrag && this.getMovement() > pinchThreshold!) {\n            return;\n        }\n        const store = new ClientStore(getEventClients(e));\n\n        this.pinchFlag = true;\n        this._addStore(store);\n\n        const result = this.emit(\"pinchStart\", {\n            datas: this.datas,\n            angle: store.getAngle(),\n            touches: this.getCurrentStore().getPositions(),\n            ...store.getPosition(),\n            inputEvent: e,\n        });\n\n        if (result === false) {\n            this.pinchFlag = false;\n        }\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag || clients.length < 2) {\n            return;\n        }\n\n        const store = this.getCurrentStore();\n        this.isPinch = true;\n\n        this.emit(\"pinch\", {\n            datas: this.datas,\n            movement: this.getMovement(clients),\n            angle: store.getAngle(clients),\n            rotation: store.getRotation(clients),\n            touches: store.getPositions(clients),\n            scale: store.getScale(clients),\n            distance: store.getDistance(clients),\n            ...store.getPosition(clients),\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const store = this.getCurrentStore();\n        this.emit(\"pinchEnd\", {\n            datas: this.datas,\n            isPinch,\n            touches: store.getPositions(),\n            ...store.getPosition(),\n            inputEvent: e,\n        });\n    }\n    private getCurrentStore() {\n        return this.clientStores[0];\n    }\n    private moveClients(clients: Client[], inputEvent: any, isAdd: boolean): TargetParam<OnDrag> {\n        const position = this._getPosition(clients, isAdd);\n\n        if (position.deltaX || position.deltaY) {\n            this.isDrag = true;\n        }\n\n        return {\n            datas: this.datas,\n            ...position,\n            movement: this.getMovement(clients),\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            isMouseEvent: this._isMouseEvent,\n            isSecondaryButton: this._isSecondaryButton,\n            inputEvent,\n        };\n    }\n    private onBlur = () => {\n        this.onDragEnd();\n    }\n    private _addStore(store: ClientStore) {\n        this.clientStores.splice(0, 0, store);\n    }\n    private _getPosition(clients?: Client[], isAdd?: boolean) {\n        const store = this.getCurrentStore();\n        const position = store.getPosition(clients, isAdd);\n\n        const { distX, distY } = this.clientStores.slice(1).reduce((prev, cur) => {\n            const storePosition = cur.getPosition();\n\n            prev.distX += storePosition.distX;\n            prev.distY += storePosition.distY;\n            return prev;\n        }, position);\n\n        return {\n            ...position,\n            distX,\n            distY,\n        };\n    }\n    private _allowClickEvent = () => {\n        removeEvent(window, \"click\", this._onClick, true);\n    };\n    private _attchDragEvent() {\n        const container = this.options.container!;\n        const passive = {\n            passive: false\n        };\n\n        if (this.isMouse) {\n            addEvent(container, \"mousemove\", this.onDrag);\n            addEvent(container, \"mouseup\", this.onDragEnd);\n        }\n\n        if (this.isTouch) {\n            addEvent(container, \"touchmove\", this.onDrag, passive);\n            addEvent(container, \"touchend\", this.onDragEnd, passive);\n            addEvent(container, \"touchcancel\", this.onDragEnd, passive);\n        }\n    };\n    private _dettachDragEvent() {\n        const container = this.options.container!;\n\n        if (this.isMouse) {\n            removeEvent(container, \"mousemove\", this.onDrag);\n            removeEvent(container, \"mouseup\", this.onDragEnd);\n        }\n\n        if (this.isTouch) {\n            removeEvent(container, \"touchstart\", this.onDragStart);\n            removeEvent(container, \"touchmove\", this.onDrag);\n            removeEvent(container, \"touchend\", this.onDragEnd);\n            removeEvent(container, \"touchcancel\", this.onDragEnd);\n        }\n    };\n    private _onClick = (e: MouseEvent) => {\n        this._preventMouseEvent = false;\n        const preventClickEventByCondition = this.options.preventClickEventByCondition;\n        if (preventClickEventByCondition?.(e)) {\n            return;\n        }\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    private _onContextMenu = (e: MouseEvent) => {\n        const options = this.options;\n        if (!options.preventRightClick) {\n            e.preventDefault();\n        } else {\n            this.onDragEnd(e);\n        }\n    }\n    private _passCallback = () => {};\n}\n\nexport default Gesto;\n"],"names":["getRad","pos1","pos2","distX","distY","rad","Math","atan2","PI","getRotatiion","touches","clientX","clientY","isMultiTouch","e","length","getEventClients","getClients","getClient","isMouseEvent","type","indexOf","getPosition","clients","prevClients","startClients","_a","getAverageClient","originalClientX","originalClientY","_b","prevX","prevY","_c","startX","startY","deltaX","deltaY","getDist","sqrt","pow","min","i","push","sumClient","client","isAdd","position","movement","map","startClient","currentClient","prevClient","forEach","INPUT_TAGNAMES","__extends","targets","options","_super","_this","isTrusted","flag","cancelable","container","pinchOutside","preventWheelClick","preventRightClick","preventDefault","checkInput","preventClickEventOnDragStart","preventClickEventOnDrag","preventClickEventByCondition","isTouch","isDragStart","_isSecondaryButton","which","button","stop","activeElement","document","target","tagName","toLowerCase","hasInput","hasContentEditable","isContentEditable","contains","activeTagName","blur","addEvent","window","_onClick","clientStores","ClientStore","isDrag","_dragFlag","datas","doubleFlag","now","prevTime","_isMouseEvent","_preventMouseEvent","result","emit","inputEvent","isSecondaryButton","isDouble","getCurrentStore","preventDrag","timer","_attchDragEvent","setTimeout","onDragStart","passive","removeEvent","clearTimeout","changedTouches","pinchFlag","onPinchStart","isScroll","moveClients","dragResult","onPinch","requestAnimationFrame","_allowClickEvent","onPinchEnd","clientsLength","keepDragging","_addStore","_getPosition","currentTime","_dettachDragEvent","isClick","onDragEnd","stopPropagation","elements","concat","checkWindowBlur","pinchThreshold","events","isMouse","el","_passCallback","_onContextMenu","onBlur","passive_1","getMovement","slice","reduce","prev","cur","isPinch","isCallDrag","move","onDrag","store","nextClients","currentDatas","name","off","angle","getAngle","getPositions","rotation","getRotation","scale","getScale","distance","getDistance","splice","storePosition","EventEmitter"],"mappings":"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"}