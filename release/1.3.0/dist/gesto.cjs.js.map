{"version":3,"file":"gesto.cjs.js","sources":["../src/utils.ts","../src/ClientStore.ts","../src/Gesto.ts","../src/index.umd.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport function getRad(pos1: number[], pos2: number[]) {\n    const distX = pos2[0] - pos1[0];\n    const distY = pos2[1] - pos1[1];\n    const rad = Math.atan2(distY, distX);\n\n    return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n\nexport function getRotatiion(touches: Client[]) {\n    return getRad([\n        touches[0].clientX,\n        touches[0].clientY,\n    ], [\n        touches[1].clientX,\n        touches[1].clientY,\n    ]) / Math.PI * 180;\n}\n\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getEventClients(e: any): Client[] {\n    if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function getPosition(clients: Client[], prevClients: Client[], startClients: Client[]): Position {\n    const length = startClients.length;\n    const {\n        clientX, clientY,\n        originalClientX, originalClientY,\n    } = getAverageClient(clients, length);\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = getAverageClient(prevClients, length);\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = getAverageClient(startClients, length);\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX: originalClientX!,\n        clientY: originalClientY!,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[], length = clients.length): Required<Client> {\n    const sumClient: Required<Client> = {\n        clientX: 0,\n        clientY: 0,\n        originalClientX: 0,\n        originalClientY: 0,\n    };\n    for (let i = 0; i < length; ++i) {\n        const client = clients[i];\n\n        sumClient.originalClientX += \"originalClientX\" in client ? client.originalClientX! : client.clientX;\n        sumClient.originalClientY += \"originalClientY\" in client ? client.originalClientY! : client.clientY;\n        sumClient.clientX += client.clientX;\n        sumClient.clientY += client.clientY;\n    }\n    if (!length) {\n        return sumClient;\n    }\n    return {\n        clientX: sumClient.clientX / length,\n        clientY: sumClient.clientY / length,\n        originalClientX: sumClient.originalClientX / length,\n        originalClientY: sumClient.originalClientY / length,\n    };\n}\nexport function plueClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function minusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { Client } from \"./types\";\nimport { getPosition, getDist, getRotatiion, getAverageClient } from \"./utils\";\n\nexport class ClientStore {\n    public prevClients: Client[] = [];\n    public startClients: Client[] = [];\n    public movement = 0;\n    public length  = 0;\n    constructor(clients: Client[]) {\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.length = clients.length;\n    }\n    public addClients(clients: Client[] = this.prevClients) {\n        const position = this.getPosition(clients);\n        const { deltaX, deltaY } = position;\n\n        this.movement += Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        this.prevClients = clients;\n\n        return position;\n    }\n    public getAngle(clients: Client[] = this.prevClients) {\n        return getRotatiion(clients);\n    }\n    public getRotation(clients: Client[] = this.prevClients) {\n        return getRotatiion(clients) - getRotatiion(this.startClients);\n    }\n    public getPosition(clients?: Client[]) {\n        return getPosition(clients || this.prevClients, this.prevClients, this.startClients);\n    }\n    public getPositions(clients: Client[] = this.prevClients) {\n        const prevClients = this.prevClients;\n\n        return this.startClients.map((startClient, i) => getPosition([clients[i]], [prevClients[i]], [startClient]));\n    }\n    public getMovement(clients?: Client[]) {\n        const movement = this.movement;\n\n        if (!clients) {\n            return movement;\n        }\n        const currentClient = getAverageClient(clients, this.length);\n        const prevClient = getAverageClient(this.prevClients, this.length);\n        const deltaX = currentClient.clientX - prevClient.clientX;\n        const deltaY = currentClient.clientY - prevClient.clientY;\n\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY) + movement;\n    }\n    public getDistance(clients = this.prevClients) {\n        return getDist(clients);\n    }\n    public getScale(clients = this.prevClients) {\n        return getDist(clients) / getDist(this.startClients);\n    }\n    public move(deltaX: number, deltaY: number) {\n        this.startClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        this.prevClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n    }\n}\n","import { Client, OnDrag, GestoOptions, GestoEvents } from \"./types\";\nimport {\n    getEventClients, isMultiTouch,\n} from \"./utils\";\nimport EventEmitter, { TargetParam } from \"@scena/event-emitter\";\nimport { addEvent, removeEvent, now, IObject } from \"@daybrush/utils\";\nimport { ClientStore } from \"./ClientStore\";\n\nconst INPUT_TAGNAMES = [\"textarea\", \"input\"];\n/**\n * You can set up drag, pinch events in any browser.\n */\nclass Gesto extends EventEmitter<GestoEvents> {\n    public options: GestoOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas: IObject<any> = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private clientStores: ClientStore[] = [];\n    private targets: Array<Element | Window> = [];\n    private prevTime: number = 0;\n    private doubleFlag: boolean = false;\n\n    /**\n     *\n     */\n    constructor(targets: Array<Element | Window> | Element | Window, options: GestoOptions = {}) {\n        super();\n        const elements = [].concat(targets as any) as Array<Element | Window>;\n        this.options = {\n            checkInput: false,\n            container: elements.length > 1 ? window : elements[0],\n            preventRightClick: true,\n            preventDefault: true,\n            checkWindowBlur: false,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events, checkWindowBlur } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n        this.targets = elements;\n\n        if (this.isMouse) {\n            elements.forEach(el => {\n                addEvent(el, \"mousedown\", this.onDragStart);\n            });\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n            addEvent(container!, \"contextmenu\", this.onDragEnd);\n        }\n        if (checkWindowBlur) {\n            addEvent(window, \"blur\", this.onBlur);\n        }\n        if (this.isTouch) {\n            const passive = {\n                passive: false,\n            };\n            elements.forEach(el => {\n                addEvent(el, \"touchstart\", this.onDragStart, passive);\n            });\n            addEvent(container!, \"touchmove\", this.onDrag, passive);\n            addEvent(container!, \"touchend\", this.onDragEnd, passive);\n            addEvent(container!, \"touchcancel\", this.onDragEnd, passive);\n        }\n    }\n    /**\n     * The total moved distance\n     */\n    public getMovement(clients?: Client[]) {\n        return this.getCurrentStore().getMovement(clients) + this.clientStores.slice(1).reduce((prev, cur) => {\n            return prev + cur.movement;\n        },  0);\n    }\n    /**\n     * Whether to drag\n     */\n    public isDragging(): boolean {\n        return this.isDrag;\n    }\n    /**\n     * Whether to start drag\n     */\n    public isFlag(): boolean {\n        return this.flag;\n    }\n    /**\n     * Whether to start pinch\n     */\n    public isPinchFlag() {\n        return this.pinchFlag;\n    }\n        /**\n     * Whether to start double click\n     */\n    public isDoubleFlag() {\n        return this.doubleFlag;\n    }\n    /**\n     * Whether to pinch\n     */\n    public isPinching() {\n        return this.isPinch;\n    }\n\n    /**\n     * If a scroll event occurs, it is corrected by the scroll distance.\n     */\n    public scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag: boolean = true) {\n        if (!this.flag) {\n            return;\n        }\n        this.clientStores[0].move(deltaX, deltaY);\n        isCallDrag && this.onDrag(e, true);\n    }\n    /**\n     * Create a virtual drag event.\n     */\n    public move([deltaX, deltaY]: number[], inputEvent: any): TargetParam<OnDrag> {\n        const store = this.getCurrentStore();\n        const nextClients = store.prevClients;\n\n        return this.moveClients(nextClients.map(({ clientX, clientY }) => {\n            return {\n                clientX: clientX + deltaX,\n                clientY: clientY + deltaY,\n                originalClientX: clientX,\n                originalClientY: clientY,\n            };\n        }), inputEvent, true);\n    }\n    /**\n     * The dragStart event is triggered by an external event.\n     */\n    public triggerDragStart(e: any) {\n        this.onDragStart(e, false);\n    }\n    /**\n     * Set the event data while dragging.\n     */\n    public setEventDatas(datas: IObject<any>) {\n        const currentDatas = this.datas;\n\n        for (const name in datas) {\n            currentDatas[name] = datas[name];\n        }\n        return this;\n    }\n    /**\n     * Set the event data while dragging.\n     */\n    public getEventDatas() {\n        return this.datas;\n    }\n    /**\n     * Unset Gesto\n     */\n    public unset() {\n        const targets = this.targets;\n        const container = this.options.container!;\n\n        this.off();\n        removeEvent(window, \"blur\", this.onBlur);\n        if (this.isMouse) {\n            targets.forEach(target => {\n                removeEvent(target, \"mousedown\", this.onDragStart);\n            });\n            removeEvent(container, \"mousemove\", this.onDrag);\n            removeEvent(container, \"mouseup\", this.onDragEnd);\n            removeEvent(container, \"contextmenu\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            targets.forEach(target => {\n                removeEvent(target, \"touchstart\", this.onDragStart);\n            });\n            removeEvent(container, \"touchstart\", this.onDragStart);\n            removeEvent(container, \"touchmove\", this.onDrag);\n            removeEvent(container, \"touchend\", this.onDragEnd);\n            removeEvent(container, \"touchcancel\", this.onDragEnd);\n        }\n    }\n    public onDragStart = (e: any, isTrusted = true) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        const { container, pinchOutside, preventRightClick, preventDefault, checkInput } = this.options;\n        const isTouch = this.isTouch;\n        const isDragStart = !this.flag;\n\n        if (isDragStart) {\n            const activeElement = document.activeElement as HTMLElement;\n            const target = e.target as HTMLElement;\n            const tagName = target.tagName.toLowerCase();\n            const hasInput = INPUT_TAGNAMES.indexOf(tagName) > -1;\n            const hasContentEditable = target.isContentEditable;\n\n            if (hasInput || hasContentEditable) {\n                if (checkInput || activeElement === target) {\n                    // force false or already focused.\n                    return false;\n                }\n                if (\n                    activeElement\n                    && hasContentEditable\n                    && activeElement.isContentEditable\n                    && activeElement.contains(target)\n                ) {\n                    return false;\n                }\n            } else if ((preventDefault || e.type === \"touchstart\") && activeElement) {\n                const activeTagName = activeElement.tagName;\n                if (activeElement.isContentEditable || INPUT_TAGNAMES.indexOf(activeTagName) > -1) {\n                    activeElement.blur();\n                }\n            }\n            this.clientStores = [new ClientStore(getEventClients(e))];\n            this.flag = true;\n            this.isDrag = false;\n            this.datas = {};\n\n            if (preventRightClick && (e.which === 3 || e.button === 2)) {\n                this.initDrag();\n                return false;\n            }\n            this.doubleFlag = now() - this.prevTime < 200;\n\n            const result = this.emit(\"dragStart\", {\n                datas: this.datas,\n                inputEvent: e,\n                isTrusted,\n                isDouble: this.doubleFlag,\n                ...this.getCurrentStore().getPosition(),\n            });\n            if (result === false) {\n                this.initDrag();\n            }\n            this.flag && preventDefault && e.preventDefault();\n        }\n        if (!this.flag) {\n            return false;\n        }\n        let timer = 0;\n\n        if (isDragStart && isTouch && pinchOutside) {\n            timer = setTimeout(() => {\n                addEvent(container!, \"touchstart\", this.onDragStart, { passive: false });\n            });\n        }\n        if (!isDragStart && isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.flag && isMultiTouch(e)) {\n            clearTimeout(timer);\n            if (isDragStart && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n\n    }\n    public onDrag = (e: any, isScroll?: boolean) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getEventClients(e);\n        const result = this.moveClients(clients, e, false);\n\n        if (this.pinchFlag || result.deltaX || result.deltaY) {\n            this.emit(\"drag\", {\n                ...result,\n                isScroll: !!isScroll,\n                inputEvent: e,\n            });\n        }\n        if (this.pinchFlag) {\n            this.onPinch(e, clients);\n        }\n\n        this.getCurrentStore().addClients(clients);\n    }\n    public onDragEnd = (e?: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const { pinchOutside, container } = this.options;\n        if (this.isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n\n        this.flag = false;\n\n        const position = this.getCurrentStore().getPosition();\n\n        const currentTime = now();\n        const isDouble = !this.isDrag && this.doubleFlag;\n\n        this.prevTime = this.isDrag || isDouble ? 0 : currentTime;\n\n        this.emit(\"dragEnd\", {\n            datas: this.datas,\n            isDouble,\n            isDrag: this.isDrag,\n            inputEvent: e,\n            ...position,\n        });\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        this.clientStores = [];\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchThreshold } = this.options;\n\n        if (this.isDrag && this.getMovement() > pinchThreshold!) {\n            return;\n        }\n        const store = new ClientStore(getEventClients(e));\n\n        this.pinchFlag = true;\n        this.clientStores.splice(0, 0, store);\n\n        const result = this.emit(\"pinchStart\", {\n            datas: this.datas,\n            angle: store.getAngle(),\n            touches: this.getCurrentStore().getPositions(),\n            ...store.getPosition(),\n            inputEvent: e,\n        });\n\n        if (result === false) {\n            this.pinchFlag = false;\n        }\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag || clients.length < 2) {\n            return;\n        }\n\n        const store = this.getCurrentStore();\n        this.isPinch = true;\n\n        this.emit(\"pinch\", {\n            datas: this.datas,\n            movement: this.getMovement(clients),\n            angle: store.getAngle(clients),\n            rotation: store.getRotation(clients),\n            touches: store.getPositions(clients),\n            scale: store.getScale(clients),\n            distance: store.getDistance(clients),\n            ...store.getPosition(clients),\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const store = this.getCurrentStore();\n        this.emit(\"pinchEnd\", {\n            datas: this.datas,\n            isPinch,\n            touches: store.getPositions(),\n            ...store.getPosition(),\n            inputEvent: e,\n        });\n        this.isPinch = false;\n        this.pinchFlag = false;\n    }\n\n    private initDrag() {\n        this.clientStores = [];\n        this.pinchFlag = false;\n        this.doubleFlag = false;\n        this.prevTime = 0;\n        this.flag = false;\n    }\n    private getCurrentStore() {\n        return this.clientStores[0];\n    }\n    private moveClients(clients: Client[], inputEvent: any, isAdd: boolean): TargetParam<OnDrag> {\n        const store = this.getCurrentStore();\n        const position = store[isAdd ? \"addClients\" : \"getPosition\"](clients);\n\n        this.isDrag = true;\n\n        return {\n            datas: this.datas,\n            ...position,\n            movement: this.getMovement(clients),\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    private onBlur = () => {\n        this.onDragEnd();\n    }\n}\n\nexport default Gesto;\n","\nimport Dragger, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Dragger as any)[name] = (modules as any)[name];\n}\n\nexport default Dragger;\n"],"names":["getRad","pos1","pos2","distX","distY","rad","Math","atan2","PI","getRotatiion","touches","clientX","clientY","isMultiTouch","e","length","getEventClients","getClients","getClient","getPosition","clients","prevClients","startClients","_a","originalClientX","originalClientY","_b","prevX","prevY","_c","startX","startY","deltaX","deltaY","getDist","sqrt","pow","min","i","push","getAverageClient","sumClient","client","position","movement","map","startClient","currentClient","prevClient","forEach","INPUT_TAGNAMES","tslib_1","targets","options","_super","_this","isTrusted","flag","cancelable","container","pinchOutside","preventRightClick","preventDefault","checkInput","isTouch","isDragStart","activeElement","document","target","tagName","toLowerCase","hasInput","indexOf","hasContentEditable","isContentEditable","contains","type","activeTagName","blur","clientStores","ClientStore","isDrag","datas","which","button","initDrag","doubleFlag","now","prevTime","result","emit","inputEvent","isDouble","getCurrentStore","timer","setTimeout","addEvent","onDragStart","passive","removeEvent","clearTimeout","changedTouches","pinchFlag","onPinchStart","isScroll","moveClients","onPinch","addClients","currentTime","onPinchEnd","onDragEnd","elements","concat","window","checkWindowBlur","pinchThreshold","events","isMouse","el","onDrag","onBlur","passive_1","getMovement","slice","reduce","prev","cur","isPinch","isCallDrag","move","store","nextClients","currentDatas","name","off","splice","angle","getAngle","getPositions","rotation","getRotation","scale","getScale","distance","getDistance","isAdd","EventEmitter","modules","Dragger"],"mappings":"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"}