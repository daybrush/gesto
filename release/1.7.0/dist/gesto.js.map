{"version":3,"file":"gesto.js","sources":["../src/utils.ts","../src/ClientStore.ts","../src/Gesto.ts","../src/index.umd.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport function getRad(pos1: number[], pos2: number[]) {\n    const distX = pos2[0] - pos1[0];\n    const distY = pos2[1] - pos1[1];\n    const rad = Math.atan2(distY, distX);\n\n    return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n\nexport function getRotatiion(touches: Client[]) {\n    return getRad([\n        touches[0].clientX,\n        touches[0].clientY,\n    ], [\n        touches[1].clientX,\n        touches[1].clientY,\n    ]) / Math.PI * 180;\n}\n\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getEventClients(e: any): Client[] {\n    if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function getPosition(clients: Client[], prevClients: Client[], startClients: Client[]): Position {\n    const length = startClients.length;\n    const {\n        clientX, clientY,\n        originalClientX, originalClientY,\n    } = getAverageClient(clients, length);\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = getAverageClient(prevClients, length);\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = getAverageClient(startClients, length);\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX: originalClientX!,\n        clientY: originalClientY!,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[], length = clients.length): Required<Client> {\n    const sumClient: Required<Client> = {\n        clientX: 0,\n        clientY: 0,\n        originalClientX: 0,\n        originalClientY: 0,\n    };\n    for (let i = 0; i < length; ++i) {\n        const client = clients[i];\n\n        sumClient.originalClientX += \"originalClientX\" in client ? client.originalClientX! : client.clientX;\n        sumClient.originalClientY += \"originalClientY\" in client ? client.originalClientY! : client.clientY;\n        sumClient.clientX += client.clientX;\n        sumClient.clientY += client.clientY;\n    }\n    if (!length) {\n        return sumClient;\n    }\n    return {\n        clientX: sumClient.clientX / length,\n        clientY: sumClient.clientY / length,\n        originalClientX: sumClient.originalClientX / length,\n        originalClientY: sumClient.originalClientY / length,\n    };\n}\nexport function plueClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function minusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { Client } from \"./types\";\nimport { getPosition, getDist, getRotatiion, getAverageClient } from \"./utils\";\n\nexport class ClientStore {\n    public prevClients: Client[] = [];\n    public startClients: Client[] = [];\n    public movement = 0;\n    public length  = 0;\n    constructor(clients: Client[]) {\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.length = clients.length;\n    }\n    public getAngle(clients: Client[] = this.prevClients) {\n        return getRotatiion(clients);\n    }\n    public getRotation(clients: Client[] = this.prevClients) {\n        return getRotatiion(clients) - getRotatiion(this.startClients);\n    }\n    public getPosition(clients: Client[] = this.prevClients, isAdd?: boolean) {\n        const position = getPosition(clients || this.prevClients, this.prevClients, this.startClients);\n\n        const { deltaX, deltaY } = position;\n\n        this.movement += Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        this.prevClients = clients;\n\n        return position;\n    }\n    public getPositions(clients: Client[] = this.prevClients) {\n        const prevClients = this.prevClients;\n\n        return this.startClients.map((startClient, i) => getPosition([clients[i]], [prevClients[i]], [startClient]));\n    }\n    public getMovement(clients?: Client[]) {\n        const movement = this.movement;\n\n        if (!clients) {\n            return movement;\n        }\n        const currentClient = getAverageClient(clients, this.length);\n        const prevClient = getAverageClient(this.prevClients, this.length);\n        const deltaX = currentClient.clientX - prevClient.clientX;\n        const deltaY = currentClient.clientY - prevClient.clientY;\n\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY) + movement;\n    }\n    public getDistance(clients = this.prevClients) {\n        return getDist(clients);\n    }\n    public getScale(clients = this.prevClients) {\n        return getDist(clients) / getDist(this.startClients);\n    }\n    public move(deltaX: number, deltaY: number) {\n        this.startClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n    }\n}\n","import { Client, OnDrag, GestoOptions, GestoEvents } from \"./types\";\nimport {\n    getEventClients, isMultiTouch,\n} from \"./utils\";\nimport EventEmitter, { TargetParam } from \"@scena/event-emitter\";\nimport { addEvent, removeEvent, now, IObject } from \"@daybrush/utils\";\nimport { ClientStore } from \"./ClientStore\";\n\nconst INPUT_TAGNAMES = [\"textarea\", \"input\"];\n/**\n * You can set up drag, pinch events in any browser.\n */\nclass Gesto extends EventEmitter<GestoEvents> {\n    public options: GestoOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas: IObject<any> = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private clientStores: ClientStore[] = [];\n    private targets: Array<Element | Window> = [];\n    private prevTime: number = 0;\n    private doubleFlag: boolean = false;\n    private _dragFlag = false;\n\n    /**\n     *\n     */\n    constructor(targets: Array<Element | Window> | Element | Window, options: GestoOptions = {}) {\n        super();\n        const elements = [].concat(targets as any) as Array<Element | Window>;\n        this.options = {\n            checkInput: false,\n            container: elements.length > 1 ? window : elements[0],\n            preventRightClick: true,\n            preventDefault: true,\n            checkWindowBlur: false,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events, checkWindowBlur } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n        this.targets = elements;\n\n        if (this.isMouse) {\n            elements.forEach(el => {\n                addEvent(el, \"mousedown\", this.onDragStart);\n            });\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n            addEvent(container!, \"contextmenu\", this.onDragEnd);\n        }\n        if (checkWindowBlur) {\n            addEvent(window, \"blur\", this.onBlur);\n        }\n        if (this.isTouch) {\n            const passive = {\n                passive: false,\n            };\n            elements.forEach(el => {\n                addEvent(el, \"touchstart\", this.onDragStart, passive);\n            });\n            addEvent(container!, \"touchmove\", this.onDrag, passive);\n            addEvent(container!, \"touchend\", this.onDragEnd, passive);\n            addEvent(container!, \"touchcancel\", this.onDragEnd, passive);\n        }\n    }\n    /**\n     * Stop Gesto's drag events.\n     */\n    public stop() {\n        this.isDrag = false;\n        this.flag = false;\n        this.clientStores = [];\n        this.datas = {};\n    }\n    /**\n     * The total moved distance\n     */\n    public getMovement(clients?: Client[]) {\n        return this.getCurrentStore().getMovement(clients) + this.clientStores.slice(1).reduce((prev, cur) => {\n            return prev + cur.movement;\n        },  0);\n    }\n    /**\n     * Whether to drag\n     */\n    public isDragging(): boolean {\n        return this.isDrag;\n    }\n    /**\n     * Whether to start drag\n     */\n    public isFlag(): boolean {\n        return this.flag;\n    }\n    /**\n     * Whether to start pinch\n     */\n    public isPinchFlag() {\n        return this.pinchFlag;\n    }\n        /**\n     * Whether to start double click\n     */\n    public isDoubleFlag() {\n        return this.doubleFlag;\n    }\n    /**\n     * Whether to pinch\n     */\n    public isPinching() {\n        return this.isPinch;\n    }\n\n    /**\n     * If a scroll event occurs, it is corrected by the scroll distance.\n     */\n    public scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag: boolean = true) {\n        if (!this.flag) {\n            return;\n        }\n        this.clientStores[0].move(deltaX, deltaY);\n        isCallDrag && this.onDrag(e, true);\n    }\n    /**\n     * Create a virtual drag event.\n     */\n    public move([deltaX, deltaY]: number[], inputEvent: any): TargetParam<OnDrag> {\n        const store = this.getCurrentStore();\n        const nextClients = store.prevClients;\n\n        return this.moveClients(nextClients.map(({ clientX, clientY }) => {\n            return {\n                clientX: clientX + deltaX,\n                clientY: clientY + deltaY,\n                originalClientX: clientX,\n                originalClientY: clientY,\n            };\n        }), inputEvent, true);\n    }\n    /**\n     * The dragStart event is triggered by an external event.\n     */\n    public triggerDragStart(e: any) {\n        this.onDragStart(e, false);\n    }\n    /**\n     * Set the event data while dragging.\n     */\n    public setEventDatas(datas: IObject<any>) {\n        const currentDatas = this.datas;\n\n        for (const name in datas) {\n            currentDatas[name] = datas[name];\n        }\n        return this;\n    }\n    /**\n     * Get the current event state while dragging.\n     */\n    public getCurrentEvent(inputEvent?: any) {\n        return {\n            datas: this.datas,\n            ...this._getPosition(),\n            movement: this.getMovement(),\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    /**\n     * Get & Set the event data while dragging.\n     */\n    public getEventDatas() {\n        return this.datas;\n    }\n    /**\n     * Unset Gesto\n     */\n    public unset() {\n        const targets = this.targets;\n        const container = this.options.container!;\n\n        this.off();\n        removeEvent(window, \"blur\", this.onBlur);\n        if (this.isMouse) {\n            targets.forEach(target => {\n                removeEvent(target, \"mousedown\", this.onDragStart);\n            });\n            removeEvent(container, \"mousemove\", this.onDrag);\n            removeEvent(container, \"mouseup\", this.onDragEnd);\n            removeEvent(container, \"contextmenu\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            targets.forEach(target => {\n                removeEvent(target, \"touchstart\", this.onDragStart);\n            });\n            removeEvent(container, \"touchstart\", this.onDragStart);\n            removeEvent(container, \"touchmove\", this.onDrag);\n            removeEvent(container, \"touchend\", this.onDragEnd);\n            removeEvent(container, \"touchcancel\", this.onDragEnd);\n        }\n    }\n    public onDragStart = (e: any, isTrusted = true) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        const { container, pinchOutside, preventRightClick, preventDefault, checkInput } = this.options;\n        const isTouch = this.isTouch;\n        const isDragStart = !this.flag;\n\n        if (isDragStart) {\n            const activeElement = document.activeElement as HTMLElement;\n            const target = e.target as HTMLElement;\n            const tagName = target.tagName.toLowerCase();\n            const hasInput = INPUT_TAGNAMES.indexOf(tagName) > -1;\n            const hasContentEditable = target.isContentEditable;\n\n            if (hasInput || hasContentEditable) {\n                if (checkInput || activeElement === target) {\n                    // force false or already focused.\n                    return false;\n                }\n                // no focus\n                if (\n                    activeElement\n                    && hasContentEditable\n                    && activeElement.isContentEditable\n                    && activeElement.contains(target)\n                ) {\n                    return false;\n                }\n            } else if ((preventDefault || e.type === \"touchstart\") && activeElement) {\n                const activeTagName = activeElement.tagName;\n                if (activeElement.isContentEditable || INPUT_TAGNAMES.indexOf(activeTagName) > -1) {\n                    activeElement.blur();\n                }\n            }\n            this.clientStores = [new ClientStore(getEventClients(e))];\n            this.flag = true;\n            this.isDrag = false;\n            this._dragFlag = true;\n            this.datas = {};\n\n            if (preventRightClick && (e.which === 3 || e.button === 2)) {\n                this.initDrag();\n                return false;\n            }\n            this.doubleFlag = now() - this.prevTime < 200;\n\n            const result = this.emit(\"dragStart\", {\n                datas: this.datas,\n                inputEvent: e,\n                isTrusted,\n                isDouble: this.doubleFlag,\n                ...this.getCurrentStore().getPosition(),\n                preventDefault() {\n                    e.preventDefault();\n                },\n                preventDrag: () => {\n                    this._dragFlag = false;\n                },\n            });\n            if (result === false) {\n                this.initDrag();\n            }\n            this.flag && preventDefault && e.preventDefault();\n        }\n        if (!this.flag) {\n            return false;\n        }\n        let timer = 0;\n\n        if (isDragStart && isTouch && pinchOutside) {\n            timer = setTimeout(() => {\n                addEvent(container!, \"touchstart\", this.onDragStart, { passive: false });\n            });\n        }\n        if (!isDragStart && isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.flag && isMultiTouch(e)) {\n            clearTimeout(timer);\n            if (isDragStart && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n\n    }\n    public onDrag = (e: any, isScroll?: boolean) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getEventClients(e);\n        const result = this.moveClients(clients, e, false);\n\n        if (this._dragFlag) {\n            if (this.pinchFlag || result.deltaX || result.deltaY) {\n                const dragResult = this.emit(\"drag\", {\n                    ...result,\n                    isScroll: !!isScroll,\n                    inputEvent: e,\n                });\n\n                if (dragResult === false) {\n                    this.stop();\n                    return;\n                }\n            }\n            if (this.pinchFlag) {\n                this.onPinch(e, clients);\n            }\n        }\n\n        this.getCurrentStore().getPosition(clients, true);\n    }\n    public onDragEnd = (e?: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const { pinchOutside, container } = this.options;\n        if (this.isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n\n\n        this.flag = false;\n\n\n        const position = this._getPosition();\n        const currentTime = now();\n        const isDouble = !this.isDrag && this.doubleFlag;\n\n        this.prevTime = this.isDrag || isDouble ? 0 : currentTime;\n\n        this.emit(\"dragEnd\", {\n            datas: this.datas,\n            isDouble,\n            isDrag: this.isDrag,\n            isClick: !this.isDrag,\n            inputEvent: e,\n            ...position,\n        });\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        this.clientStores = [];\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchThreshold } = this.options;\n\n        if (this.isDrag && this.getMovement() > pinchThreshold!) {\n            return;\n        }\n        const store = new ClientStore(getEventClients(e));\n\n        this.pinchFlag = true;\n        this.clientStores.splice(0, 0, store);\n\n        const result = this.emit(\"pinchStart\", {\n            datas: this.datas,\n            angle: store.getAngle(),\n            touches: this.getCurrentStore().getPositions(),\n            ...store.getPosition(),\n            inputEvent: e,\n        });\n\n        if (result === false) {\n            this.pinchFlag = false;\n        }\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag || clients.length < 2) {\n            return;\n        }\n\n        const store = this.getCurrentStore();\n        this.isPinch = true;\n\n        this.emit(\"pinch\", {\n            datas: this.datas,\n            movement: this.getMovement(clients),\n            angle: store.getAngle(clients),\n            rotation: store.getRotation(clients),\n            touches: store.getPositions(clients),\n            scale: store.getScale(clients),\n            distance: store.getDistance(clients),\n            ...store.getPosition(clients),\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const store = this.getCurrentStore();\n        this.emit(\"pinchEnd\", {\n            datas: this.datas,\n            isPinch,\n            touches: store.getPositions(),\n            ...store.getPosition(),\n            inputEvent: e,\n        });\n        this.isPinch = false;\n        this.pinchFlag = false;\n    }\n\n    private initDrag() {\n        this.clientStores = [];\n        this.pinchFlag = false;\n        this.doubleFlag = false;\n        this.prevTime = 0;\n        this.flag = false;\n    }\n    private getCurrentStore() {\n        return this.clientStores[0];\n    }\n    private moveClients(clients: Client[], inputEvent: any, isAdd: boolean): TargetParam<OnDrag> {\n        const position = this._getPosition(clients, isAdd);\n\n        if (position.deltaX || position.deltaY) {\n            this.isDrag = true;\n        }\n\n        return {\n            datas: this.datas,\n            ...position,\n            movement: this.getMovement(clients),\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    private onBlur = () => {\n        this.onDragEnd();\n    }\n    private _getPosition(clients?: Client[], isAdd?: boolean) {\n        const store = this.getCurrentStore();\n        const position = store.getPosition(clients, isAdd);\n\n        const { distX, distY } = this.clientStores.slice(1).reduce((prev, cur) => {\n            const storePosition = cur.getPosition();\n\n            prev.distX += storePosition.distX;\n            prev.distY += storePosition.distY;\n            return prev;\n        },  position);\n\n        return {\n            ...position,\n            distX,\n            distY,\n        };\n    }\n\n}\n\nexport default Gesto;\n","\nimport Dragger, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Dragger as any)[name] = (modules as any)[name];\n}\n\nexport default Dragger;\n"],"names":["getRad","pos1","pos2","distX","distY","rad","Math","atan2","PI","getRotatiion","touches","clientX","clientY","isMultiTouch","e","length","getEventClients","getClients","getClient","getPosition","clients","prevClients","startClients","_a","originalClientX","originalClientY","_b","prevX","prevY","_c","startX","startY","deltaX","deltaY","getDist","sqrt","pow","min","i","push","getAverageClient","sumClient","client","isAdd","position","movement","map","startClient","currentClient","prevClient","forEach","INPUT_TAGNAMES","tslib_1","targets","options","_super","_this","isTrusted","flag","cancelable","container","pinchOutside","preventRightClick","preventDefault","checkInput","isTouch","isDragStart","activeElement","document","target","tagName","toLowerCase","hasInput","indexOf","hasContentEditable","isContentEditable","contains","type","activeTagName","blur","clientStores","ClientStore","isDrag","_dragFlag","datas","which","button","initDrag","doubleFlag","now","prevTime","result","emit","inputEvent","isDouble","getCurrentStore","preventDrag","timer","setTimeout","addEvent","onDragStart","passive","removeEvent","clearTimeout","changedTouches","pinchFlag","onPinchStart","isScroll","moveClients","dragResult","stop","onPinch","_getPosition","currentTime","isClick","onPinchEnd","onDragEnd","elements","concat","window","checkWindowBlur","pinchThreshold","events","isMouse","el","onDrag","onBlur","passive_1","getMovement","slice","reduce","prev","cur","isPinch","isCallDrag","move","store","nextClients","currentDatas","name","off","splice","angle","getAngle","getPositions","rotation","getRotation","scale","getScale","distance","getDistance","EventEmitter","modules","Dragger"],"mappings":"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"}