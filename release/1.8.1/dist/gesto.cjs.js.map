{"version":3,"file":"gesto.cjs.js","sources":["../src/utils.ts","../src/ClientStore.ts","../src/Gesto.ts","../src/index.umd.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport function getRad(pos1: number[], pos2: number[]) {\n    const distX = pos2[0] - pos1[0];\n    const distY = pos2[1] - pos1[1];\n    const rad = Math.atan2(distY, distX);\n\n    return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n\nexport function getRotatiion(touches: Client[]) {\n    return getRad([\n        touches[0].clientX,\n        touches[0].clientY,\n    ], [\n        touches[1].clientX,\n        touches[1].clientY,\n    ]) / Math.PI * 180;\n}\n\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getEventClients(e: any): Client[] {\n    if (!e) {\n        return [];\n    } if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function getPosition(clients: Client[], prevClients: Client[], startClients: Client[]): Position {\n    const length = startClients.length;\n    const {\n        clientX, clientY,\n        originalClientX, originalClientY,\n    } = getAverageClient(clients, length);\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = getAverageClient(prevClients, length);\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = getAverageClient(startClients, length);\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX: originalClientX!,\n        clientY: originalClientY!,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[], length = clients.length): Required<Client> {\n    const sumClient: Required<Client> = {\n        clientX: 0,\n        clientY: 0,\n        originalClientX: 0,\n        originalClientY: 0,\n    };\n    for (let i = 0; i < length; ++i) {\n        const client = clients[i];\n\n        sumClient.originalClientX += \"originalClientX\" in client ? client.originalClientX! : client.clientX;\n        sumClient.originalClientY += \"originalClientY\" in client ? client.originalClientY! : client.clientY;\n        sumClient.clientX += client.clientX;\n        sumClient.clientY += client.clientY;\n    }\n    if (!length) {\n        return sumClient;\n    }\n    return {\n        clientX: sumClient.clientX / length,\n        clientY: sumClient.clientY / length,\n        originalClientX: sumClient.originalClientX / length,\n        originalClientY: sumClient.originalClientY / length,\n    };\n}\nexport function plueClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function minusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { Client } from \"./types\";\nimport { getPosition, getDist, getRotatiion, getAverageClient } from \"./utils\";\n\nexport class ClientStore {\n    public prevClients: Client[] = [];\n    public startClients: Client[] = [];\n    public movement = 0;\n    public length  = 0;\n    constructor(clients: Client[]) {\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.length = clients.length;\n    }\n    public getAngle(clients: Client[] = this.prevClients) {\n        return getRotatiion(clients);\n    }\n    public getRotation(clients: Client[] = this.prevClients) {\n        return getRotatiion(clients) - getRotatiion(this.startClients);\n    }\n    public getPosition(clients: Client[] = this.prevClients, isAdd?: boolean) {\n        const position = getPosition(clients || this.prevClients, this.prevClients, this.startClients);\n\n        const { deltaX, deltaY } = position;\n\n        this.movement += Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        this.prevClients = clients;\n\n        return position;\n    }\n    public getPositions(clients: Client[] = this.prevClients) {\n        const prevClients = this.prevClients;\n\n        return this.startClients.map((startClient, i) => getPosition([clients[i]], [prevClients[i]], [startClient]));\n    }\n    public getMovement(clients?: Client[]) {\n        const movement = this.movement;\n\n        if (!clients) {\n            return movement;\n        }\n        const currentClient = getAverageClient(clients, this.length);\n        const prevClient = getAverageClient(this.prevClients, this.length);\n        const deltaX = currentClient.clientX - prevClient.clientX;\n        const deltaY = currentClient.clientY - prevClient.clientY;\n\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY) + movement;\n    }\n    public getDistance(clients = this.prevClients) {\n        return getDist(clients);\n    }\n    public getScale(clients = this.prevClients) {\n        return getDist(clients) / getDist(this.startClients);\n    }\n    public move(deltaX: number, deltaY: number) {\n        this.startClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n    }\n}\n","import { Client, OnDrag, GestoOptions, GestoEvents } from \"./types\";\nimport {\n    getEventClients, isMultiTouch,\n} from \"./utils\";\nimport EventEmitter, { TargetParam } from \"@scena/event-emitter\";\nimport { addEvent, removeEvent, now, IObject } from \"@daybrush/utils\";\nimport { ClientStore } from \"./ClientStore\";\n\nconst INPUT_TAGNAMES = [\"textarea\", \"input\"];\n/**\n * You can set up drag, pinch events in any browser.\n */\nclass Gesto extends EventEmitter<GestoEvents> {\n    public options: GestoOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas: IObject<any> = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private clientStores: ClientStore[] = [];\n    private targets: Array<Element | Window> = [];\n    private prevTime: number = 0;\n    private doubleFlag: boolean = false;\n    private _dragFlag = false;\n\n    /**\n     *\n     */\n    constructor(targets: Array<Element | Window> | Element | Window, options: GestoOptions = {}) {\n        super();\n        const elements = [].concat(targets as any) as Array<Element | Window>;\n        this.options = {\n            checkInput: false,\n            container: elements.length > 1 ? window : elements[0],\n            preventRightClick: true,\n            preventDefault: true,\n            checkWindowBlur: false,\n            keepDragging: false,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events, checkWindowBlur } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n        this.targets = elements;\n\n        if (this.isMouse) {\n            elements.forEach(el => {\n                addEvent(el, \"mousedown\", this.onDragStart);\n            });\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n            addEvent(container!, \"contextmenu\", this.onDragEnd);\n        }\n        if (checkWindowBlur) {\n            addEvent(window, \"blur\", this.onBlur);\n        }\n        if (this.isTouch) {\n            const passive = {\n                passive: false,\n            };\n            elements.forEach(el => {\n                addEvent(el, \"touchstart\", this.onDragStart, passive);\n            });\n            addEvent(container!, \"touchmove\", this.onDrag, passive);\n            addEvent(container!, \"touchend\", this.onDragEnd, passive);\n            addEvent(container!, \"touchcancel\", this.onDragEnd, passive);\n        }\n    }\n    /**\n     * Stop Gesto's drag events.\n     */\n    public stop() {\n        this.isDrag = false;\n        this.flag = false;\n        this.clientStores = [];\n        this.datas = {};\n    }\n    /**\n     * The total moved distance\n     */\n    public getMovement(clients?: Client[]) {\n        return this.getCurrentStore().getMovement(clients) + this.clientStores.slice(1).reduce((prev, cur) => {\n            return prev + cur.movement;\n        },  0);\n    }\n    /**\n     * Whether to drag\n     */\n    public isDragging(): boolean {\n        return this.isDrag;\n    }\n    /**\n     * Whether to start drag\n     */\n    public isFlag(): boolean {\n        return this.flag;\n    }\n    /**\n     * Whether to start pinch\n     */\n    public isPinchFlag() {\n        return this.pinchFlag;\n    }\n        /**\n     * Whether to start double click\n     */\n    public isDoubleFlag() {\n        return this.doubleFlag;\n    }\n    /**\n     * Whether to pinch\n     */\n    public isPinching() {\n        return this.isPinch;\n    }\n\n    /**\n     * If a scroll event occurs, it is corrected by the scroll distance.\n     */\n    public scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag: boolean = true) {\n        if (!this.flag) {\n            return;\n        }\n        this.clientStores[0].move(deltaX, deltaY);\n        isCallDrag && this.onDrag(e, true);\n    }\n    /**\n     * Create a virtual drag event.\n     */\n    public move([deltaX, deltaY]: number[], inputEvent: any): TargetParam<OnDrag> {\n        const store = this.getCurrentStore();\n        const nextClients = store.prevClients;\n\n        return this.moveClients(nextClients.map(({ clientX, clientY }) => {\n            return {\n                clientX: clientX + deltaX,\n                clientY: clientY + deltaY,\n                originalClientX: clientX,\n                originalClientY: clientY,\n            };\n        }), inputEvent, true);\n    }\n    /**\n     * The dragStart event is triggered by an external event.\n     */\n    public triggerDragStart(e: any) {\n        this.onDragStart(e, false);\n    }\n    /**\n     * Set the event data while dragging.\n     */\n    public setEventDatas(datas: IObject<any>) {\n        const currentDatas = this.datas;\n\n        for (const name in datas) {\n            currentDatas[name] = datas[name];\n        }\n        return this;\n    }\n    /**\n     * Get the current event state while dragging.\n     */\n    public getCurrentEvent(inputEvent?: any) {\n        return {\n            datas: this.datas,\n            ...this._getPosition(),\n            movement: this.getMovement(),\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    /**\n     * Get & Set the event data while dragging.\n     */\n    public getEventDatas() {\n        return this.datas;\n    }\n    /**\n     * Unset Gesto\n     */\n    public unset() {\n        const targets = this.targets;\n        const container = this.options.container!;\n\n        this.off();\n        removeEvent(window, \"blur\", this.onBlur);\n        if (this.isMouse) {\n            targets.forEach(target => {\n                removeEvent(target, \"mousedown\", this.onDragStart);\n            });\n            removeEvent(container, \"mousemove\", this.onDrag);\n            removeEvent(container, \"mouseup\", this.onDragEnd);\n            removeEvent(container, \"contextmenu\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            targets.forEach(target => {\n                removeEvent(target, \"touchstart\", this.onDragStart);\n            });\n            removeEvent(container, \"touchstart\", this.onDragStart);\n            removeEvent(container, \"touchmove\", this.onDrag);\n            removeEvent(container, \"touchend\", this.onDragEnd);\n            removeEvent(container, \"touchcancel\", this.onDragEnd);\n        }\n    }\n    public onDragStart = (e: any, isTrusted = true) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        const { container, pinchOutside, preventRightClick, preventDefault, checkInput } = this.options;\n        const isTouch = this.isTouch;\n        const isDragStart = !this.flag;\n\n        if (isDragStart) {\n            const activeElement = document.activeElement as HTMLElement;\n            const target = e.target as HTMLElement;\n            const tagName = target.tagName.toLowerCase();\n            const hasInput = INPUT_TAGNAMES.indexOf(tagName) > -1;\n            const hasContentEditable = target.isContentEditable;\n\n            if (hasInput || hasContentEditable) {\n                if (checkInput || activeElement === target) {\n                    // force false or already focused.\n                    return false;\n                }\n                // no focus\n                if (\n                    activeElement\n                    && hasContentEditable\n                    && activeElement.isContentEditable\n                    && activeElement.contains(target)\n                ) {\n                    return false;\n                }\n            } else if ((preventDefault || e.type === \"touchstart\") && activeElement) {\n                const activeTagName = activeElement.tagName;\n                if (activeElement.isContentEditable || INPUT_TAGNAMES.indexOf(activeTagName) > -1) {\n                    activeElement.blur();\n                }\n            }\n            this.clientStores = [new ClientStore(getEventClients(e))];\n            this.flag = true;\n            this.isDrag = false;\n            this._dragFlag = true;\n            this.datas = {};\n\n            if (preventRightClick && (e.which === 3 || e.button === 2)) {\n                this.initDrag();\n                return false;\n            }\n            this.doubleFlag = now() - this.prevTime < 200;\n\n            const result = this.emit(\"dragStart\", {\n                datas: this.datas,\n                inputEvent: e,\n                isTrusted,\n                isDouble: this.doubleFlag,\n                ...this.getCurrentStore().getPosition(),\n                preventDefault() {\n                    e.preventDefault();\n                },\n                preventDrag: () => {\n                    this._dragFlag = false;\n                },\n            });\n            if (result === false) {\n                this.initDrag();\n            }\n            this.flag && preventDefault && e.preventDefault();\n        }\n        if (!this.flag) {\n            return false;\n        }\n        let timer = 0;\n\n        if (isDragStart && isTouch && pinchOutside) {\n            timer = setTimeout(() => {\n                addEvent(container!, \"touchstart\", this.onDragStart, { passive: false });\n            });\n        }\n        if (!isDragStart && isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.flag && isMultiTouch(e)) {\n            clearTimeout(timer);\n            if (isDragStart && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n\n    }\n    public onDrag = (e: any, isScroll?: boolean) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getEventClients(e);\n        const result = this.moveClients(clients, e, false);\n\n        if (this._dragFlag) {\n            if (this.pinchFlag || result.deltaX || result.deltaY) {\n                const dragResult = this.emit(\"drag\", {\n                    ...result,\n                    isScroll: !!isScroll,\n                    inputEvent: e,\n                });\n\n                if (dragResult === false) {\n                    this.stop();\n                    return;\n                }\n            }\n            if (this.pinchFlag) {\n                this.onPinch(e, clients);\n            }\n        }\n\n        this.getCurrentStore().getPosition(clients, true);\n    }\n    public onDragEnd = (e?: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const { pinchOutside, container } = this.options;\n        if (this.isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        const clients = e?.touches ? getEventClients(e) : [];\n        const clientsLength = clients.length;\n\n        if (clientsLength === 0 || !this.options.keepDragging) {\n            this.flag = false;\n        } else {\n            this._addStore(new ClientStore(clients));\n        }\n\n\n        const position = this._getPosition();\n        const currentTime = now();\n        const isDouble = !this.isDrag && this.doubleFlag;\n\n        this.prevTime = this.isDrag || isDouble ? 0 : currentTime;\n\n        if (!this.flag) {\n            this.emit(\"dragEnd\", {\n                datas: this.datas,\n                isDouble,\n                isDrag: this.isDrag,\n                isClick: !this.isDrag,\n                inputEvent: e,\n                ...position,\n            });\n\n            this.clientStores = [];\n        }\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchThreshold } = this.options;\n\n        if (this.isDrag && this.getMovement() > pinchThreshold!) {\n            return;\n        }\n        const store = new ClientStore(getEventClients(e));\n\n        this.pinchFlag = true;\n        this._addStore(store);\n\n        const result = this.emit(\"pinchStart\", {\n            datas: this.datas,\n            angle: store.getAngle(),\n            touches: this.getCurrentStore().getPositions(),\n            ...store.getPosition(),\n            inputEvent: e,\n        });\n\n        if (result === false) {\n            this.pinchFlag = false;\n        }\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag || clients.length < 2) {\n            return;\n        }\n\n        const store = this.getCurrentStore();\n        this.isPinch = true;\n\n        this.emit(\"pinch\", {\n            datas: this.datas,\n            movement: this.getMovement(clients),\n            angle: store.getAngle(clients),\n            rotation: store.getRotation(clients),\n            touches: store.getPositions(clients),\n            scale: store.getScale(clients),\n            distance: store.getDistance(clients),\n            ...store.getPosition(clients),\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const store = this.getCurrentStore();\n        this.emit(\"pinchEnd\", {\n            datas: this.datas,\n            isPinch,\n            touches: store.getPositions(),\n            ...store.getPosition(),\n            inputEvent: e,\n        });\n    }\n\n    private initDrag() {\n        this.clientStores = [];\n        this.pinchFlag = false;\n        this.doubleFlag = false;\n        this.prevTime = 0;\n        this.flag = false;\n    }\n    private getCurrentStore() {\n        return this.clientStores[0];\n    }\n    private moveClients(clients: Client[], inputEvent: any, isAdd: boolean): TargetParam<OnDrag> {\n        const position = this._getPosition(clients, isAdd);\n\n        if (position.deltaX || position.deltaY) {\n            this.isDrag = true;\n        }\n\n        return {\n            datas: this.datas,\n            ...position,\n            movement: this.getMovement(clients),\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    private onBlur = () => {\n        this.onDragEnd();\n    }\n    private _addStore(store: ClientStore) {\n        this.clientStores.splice(0, 0, store);\n    }\n    private _getPosition(clients?: Client[], isAdd?: boolean) {\n        const store = this.getCurrentStore();\n        const position = store.getPosition(clients, isAdd);\n\n        const { distX, distY } = this.clientStores.slice(1).reduce((prev, cur) => {\n            const storePosition = cur.getPosition();\n\n            prev.distX += storePosition.distX;\n            prev.distY += storePosition.distY;\n            return prev;\n        },  position);\n\n        return {\n            ...position,\n            distX,\n            distY,\n        };\n    }\n\n}\n\nexport default Gesto;\n","\nimport Dragger, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Dragger as any)[name] = (modules as any)[name];\n}\n\nexport default Dragger;\n"],"names":["getRad","pos1","pos2","distX","distY","rad","Math","atan2","PI","getRotatiion","touches","clientX","clientY","isMultiTouch","e","length","getEventClients","getClients","getClient","getPosition","clients","prevClients","startClients","_a","getAverageClient","originalClientX","originalClientY","_b","prevX","prevY","_c","startX","startY","deltaX","deltaY","getDist","sqrt","pow","min","i","push","sumClient","client","isAdd","position","movement","map","startClient","currentClient","prevClient","forEach","INPUT_TAGNAMES","__extends","targets","options","_super","_this","isTrusted","flag","cancelable","container","pinchOutside","preventRightClick","preventDefault","checkInput","isTouch","isDragStart","activeElement","document","target","tagName","toLowerCase","hasInput","indexOf","hasContentEditable","isContentEditable","contains","type","activeTagName","blur","clientStores","ClientStore","isDrag","_dragFlag","datas","which","button","initDrag","doubleFlag","now","prevTime","result","emit","inputEvent","isDouble","getCurrentStore","preventDrag","timer","setTimeout","addEvent","onDragStart","passive","removeEvent","clearTimeout","changedTouches","pinchFlag","onPinchStart","isScroll","moveClients","dragResult","stop","onPinch","onPinchEnd","clientsLength","keepDragging","_addStore","_getPosition","currentTime","isClick","onDragEnd","elements","concat","window","checkWindowBlur","pinchThreshold","events","isMouse","el","onDrag","onBlur","passive_1","getMovement","slice","reduce","prev","cur","isPinch","isCallDrag","move","store","nextClients","currentDatas","name","off","angle","getAngle","getPositions","rotation","getRotation","scale","getScale","distance","getDistance","splice","storePosition","EventEmitter","modules","Dragger"],"mappings":"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"}